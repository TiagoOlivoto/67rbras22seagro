[
  {
    "objectID": "11_random_forest.html",
    "href": "11_random_forest.html",
    "title": "Classificação de espécies utilizando",
    "section": "",
    "text": "% Analysis\n\n1 Libraries\nTo reproduce the examples of this material, the R packages the following packages are needed.\n\nlibrary(pliman)\nlibrary(caret)\nlibrary(doParallel)\nlibrary(tidyverse)\n\n\n2 Data\n\n\ncoefs2 &lt;-\n  rio::import(\"data/coefs_leaves.csv\")  |&gt;\n  separate_col(img, into = c(\"specie\", \"img\")) |&gt;\n  metan::as_factor(specie) |&gt;\n  column_to_rownames(\"img\")\n\n\ndf_model2 &lt;-\n  coefs2 |&gt; \n  dplyr::select(\n    specie,\n    area, perimeter, radius_sd, length, width,  # scale-dependent\n    major_axis, minor_axis, eccentricity, solidity, elongation, circularity_norm, form_factor, narrow_factor, asp_ratio, plw_ratio, # shape\n    asm:f13, # texture\n    DGCI,\n    A2:D8 # fourrier\n  )\n\n\n3 Model\n\n# best model\ncontrol &lt;-\n  trainControl(method = 'cv',\n               p = 0.7,\n               number = 10,\n               verboseIter = TRUE,\n               savePredictions = \"all\")\nfit &lt;- train(specie ~ .,\n             data = df_model2,\n             method = 'rf',\n             tuneGrid = expand.grid(.mtry = 6),\n             trControl = control,\n             ntree = 500)\n## + Fold01: mtry=6 \n## - Fold01: mtry=6 \n## + Fold02: mtry=6 \n## - Fold02: mtry=6 \n## + Fold03: mtry=6 \n## - Fold03: mtry=6 \n## + Fold04: mtry=6 \n## - Fold04: mtry=6 \n## + Fold05: mtry=6 \n## - Fold05: mtry=6 \n## + Fold06: mtry=6 \n## - Fold06: mtry=6 \n## + Fold07: mtry=6 \n## - Fold07: mtry=6 \n## + Fold08: mtry=6 \n## - Fold08: mtry=6 \n## + Fold09: mtry=6 \n## - Fold09: mtry=6 \n## + Fold10: mtry=6 \n## - Fold10: mtry=6 \n## Aggregating results\n## Fitting final model on full training set\n\nprint(fit)\n## Random Forest \n## \n## 1907 samples\n##   58 predictor\n##   32 classes: 'E1', 'E10', 'E11', 'E12', 'E14', 'E15', 'E16', 'E17', 'E18', 'E19', 'E2', 'E20', 'E21', 'E22', 'E23', 'E24', 'E25', 'E26', 'E27', 'E28', 'E29', 'E3', 'E30', 'E31', 'E32', 'E33', 'E4', 'E5', 'E6', 'E7', 'E8', 'E9' \n## \n## No pre-processing\n## Resampling: Cross-Validated (10 fold) \n## Summary of sample sizes: 1717, 1718, 1715, 1717, 1715, 1719, ... \n## Resampling results:\n## \n##   Accuracy   Kappa    \n##   0.9742974  0.9734539\n## \n## Tuning parameter 'mtry' was held constant at a value of 6\n\ncm &lt;- confusionMatrix.train(fit, norm = \"none\")\ncm2 &lt;- data.frame(cm$table)\nggplot(cm2, aes(Prediction, Reference, fill = Freq)) +\n  geom_tile() +\n  labs(x = NULL,\n       y = NULL) +\n  scale_x_discrete(expand = expansion(0)) +\n  scale_y_discrete(expand = expansion(0)) +\n  scale_fill_gradient2() +\n  geom_text(aes(label = Freq),\n            size = 3) +\n  theme(panel.border = element_rect(color = \"black\", fill = NA))\n\n\n\nstats &lt;- confusionMatrix(cm$table)\n\n\nerros &lt;- \n  fit[[\"pred\"]] |&gt; \n  mutate(erro = ifelse(pred == obs, 0, 1))\n\n\n\ndifs &lt;-\n  erros |&gt; \n  group_by(pred) |&gt; \n  summarise(sum = sum(erro))"
  },
  {
    "objectID": "09_dgci.html",
    "href": "09_dgci.html",
    "title": "09: Relação entre SPAD e o índice DGCI em folhas de linho obtido em diferentes condições de iluminação",
    "section": "",
    "text": "% Analysis"
  },
  {
    "objectID": "09_dgci.html#imagem-iluminada",
    "href": "09_dgci.html#imagem-iluminada",
    "title": "09: Relação entre SPAD e o índice DGCI em folhas de linho obtido em diferentes condições de iluminação",
    "section": "\n3.1 Imagem iluminada",
    "text": "3.1 Imagem iluminada\n\nimg &lt;- image_import(\"figs/dgci_ilum.jpg\")\n\nres_ilu &lt;-\n  analyze_objects_shp(img,\n                      nrow = 4,\n                      ncol = 10,\n                      index = \"B\",\n                      watershed = FALSE,\n                      plot = FALSE,\n                      pixel_level_index = TRUE,\n                      object_index = \"DGCI\")\nplot(img)\nplot_measures(res_ilu, measure = \"DGCI\", digits = 3)\nplot(res_ilu$shapefiles)\n\n\n\ndgci_ilu &lt;- res_ilu$object_index |&gt; select(-id) |&gt; rename(dgci_ilu = DGCI)"
  },
  {
    "objectID": "09_dgci.html#interior-com-flash",
    "href": "09_dgci.html#interior-com-flash",
    "title": "09: Relação entre SPAD e o índice DGCI em folhas de linho obtido em diferentes condições de iluminação",
    "section": "\n3.2 Interior, com flash",
    "text": "3.2 Interior, com flash\n\nimg &lt;- image_import(\"figs/dgci_cf.jpg\")\n\nres_cf &lt;-\n  analyze_objects_shp(img,\n                      nrow = 4,\n                      ncol = 10,\n                      index = \"B\",\n                      watershed = FALSE,\n                      plot = FALSE,\n                      pixel_level_index = TRUE,\n                      object_index = \"DGCI\")\nplot(img)\nplot_measures(res_cf, measure = \"DGCI\", digits = 3)\nplot(res_cf$shapefiles)\n\n\n\ndgci_cf &lt;- res_cf$object_index |&gt; select(-id) |&gt; rename(dgci_cf = DGCI)"
  },
  {
    "objectID": "09_dgci.html#gráfico",
    "href": "09_dgci.html#gráfico",
    "title": "09: Relação entre SPAD e o índice DGCI em folhas de linho obtido em diferentes condições de iluminação",
    "section": "\n6.1 Gráfico",
    "text": "6.1 Gráfico\n\nggplot(df_spad, aes(dgci_cf, dgci_ilu, color = condicao)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_abline(intercept = 0, slope = 1) +\n  scale_x_continuous(limits = c(0, 1)) +\n  scale_y_continuous(limits = c(0, 1)) +\n  theme_bw(base_size = 14) +\n  labs(x = \"DGCI com flash\",\n       y = \"DGCI iluminado\",\n       color = \"\") +\n  theme(legend.position = \"bottom\") +\n  coord_fixed()\n\n\n\n\nggsave(\"figs/dgci_regressao.jpg\",\n       width = 6,\n       height = 6)"
  },
  {
    "objectID": "09_dgci.html#coeficientes",
    "href": "09_dgci.html#coeficientes",
    "title": "09: Relação entre SPAD e o índice DGCI em folhas de linho obtido em diferentes condições de iluminação",
    "section": "\n6.2 Coeficientes",
    "text": "6.2 Coeficientes\n\ncoefs_dgci &lt;- \n  df_spad |&gt; \n  group_by(condicao) %&gt;% \n  doo(~lm(dgci_cf ~ dgci_ilu, data = .) |&gt; broom::tidy())  \n\n# export(coefs_dgci, \"data/coefs_dgci.xlsx\")"
  },
  {
    "objectID": "09_dgci.html#densidade",
    "href": "09_dgci.html#densidade",
    "title": "09: Relação entre SPAD e o índice DGCI em folhas de linho obtido em diferentes condições de iluminação",
    "section": "\n6.3 Densidade",
    "text": "6.3 Densidade\n\n\ndist_ilum &lt;- \n  res_ilu[[\"object_rgb\"]] |&gt; \n  select(h, s, b, DGCI)\n\ndist_cf &lt;- \n  res_cf[[\"object_rgb\"]] |&gt; \n  select(h, s, b, DGCI)\n\ndf_hist &lt;- \n  rbind_fill_id(dist_ilum, dist_cf, .id = \"condicao\") |&gt; \n  mutate(amarelado = ifelse(DGCI &lt; 0.5, \"DGCI &lt; 0,5\", \"DGCI &gt;= 0,5\"))\n\ndf_histp &lt;- \n  df_hist |&gt; \n  select(-DGCI) |&gt; \n  pivot_longer(-c(condicao, amarelado)) |&gt; \n  remove_rows_na() |&gt; \n  mutate(name = fct_relevel(name, \"h\", \"s\", \"b\"))\n\nggplot(df_histp, aes(x = value, fill = amarelado)) +\n  geom_density(alpha = 0.6) +\n  facet_grid(condicao~name, scales = \"free\") +\n  theme_bw(base_size = 14) +\n  labs(x = \"Valor observado\",\n       y = \"Densidade\",\n       fill = \"\") +\n  theme(legend.position = \"bottom\",\n        panel.grid.minor = element_blank()) +\n  scale_fill_manual(values = c(\"yellow\", \"darkgreen\"))\n\n\n\n\nggsave(\"figs/dgci_density.jpg\",\n       width = 10,\n       height = 7)"
  },
  {
    "objectID": "07_diversidade.html",
    "href": "07_diversidade.html",
    "title": "07: Diversidade genética entre acessos de linho (Linum usitatissimum, L.) baseada em caracteres morfoagronômicos",
    "section": "",
    "text": "1 Libraries\nTo reproduce the examples of this material, the R packages the following packages are needed.\n\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(metan)\nlibrary(factoextra)\nlibrary(ggstatsplot)\n\n\n2 Data\n\ndf &lt;- \n  rio::import(\"data/data_mgidi.csv\") |&gt; \n  remove_rows_na()\n\n\n3 Adjust by season effect\n\ndf_man &lt;- \n  df |&gt; \n  remove_cols(gen)\n\nmod &lt;- manova(cbind(ac, ap, nc, ng, areac,  nr, mc, rgpla, icc, ngcap, mmg) ~ 0 + epoca,\n              data = df_man)\ncoefficients(mod)\n##               ac       ap       nc        ng     areac        nr        mc\n## epocaE1 53.98939 81.54545 33.51515 216.07576 0.3942657 1.2878788 1.6351515\n## epocaE2 51.35294 76.52941 23.31373 140.00000 0.3769100 0.4509804 1.1113725\n## epocaE3 64.34231 81.74346 16.01923  80.36538 0.3365584 0.5576923 0.5205769\n## epocaE4 59.13273 69.43273 15.32727  69.78182 0.2835268 0.4181818 0.4163636\n##             rgpla       icc    ngcap      mmg\n## epocaE1 1.2174242 0.7265065 6.466984 5.597276\n## epocaE2 0.7984314 0.7222663 6.215353 5.887311\n## epocaE3 0.3098077 0.5899229 4.940946 3.806239\n## epocaE4 0.2649091 0.6238759 4.483170 3.888772\ndf_resi &lt;- \n  residuals(mod) |&gt; \n  as.data.frame() |&gt; \n  mutate(gen = df$gen) |&gt; \n  column_to_rownames(\"gen\")\n\n\n4 Distances\n\ndists &lt;- clustering(df_resi,\n                    scale = TRUE,\n                    clustmethod = \"average\",\n                    nclust = 16)\n\nfviz_dend(dists$hc,\n          k = 16,\n          cex = 0.5,\n          repel = TRUE,\n          type = \"phylo\") +\n  theme_void()\n\n\n\n\nggsave(\"figs/phylo.jpg\",\n       dpi = 600,\n       width = 8,\n       height = 8)\n\n\n5 Médias\n\ndf2 &lt;- \n  df |&gt;\n  mutate(groups = dists$data |&gt; pull(groups)) |&gt; \n  as_factor(groups)\n\ndf3 &lt;- \n  df2 |&gt; \n  select(groups, mmg, rgpla, ng) |&gt; \n  pivot_longer(-groups) |&gt; \n  filter(groups %in% c(2, 3, 4, 11, 15)) |&gt; \n  group_by(groups, name) |&gt; \n  summarise(mean = mean(value),\n            sd = sd(value),\n            n = n(),\n            se = sd / sqrt(n))\n\ndf_mean &lt;- \n  df |&gt; \n  mean_by(.vars = c(mmg, rgpla, ng)) |&gt; \n  pivot_longer(everything())\n\ndf_meansel &lt;- \n  df3 |&gt; \n  mean_by(name)\n\n\n6 Stats\n\n# correct season effect\nggplot(df3, aes(x = groups, y = mean, fill = groups)) +\n  geom_col() +\n  geom_hline(data = df_mean,\n             aes(yintercept = value),\n             linetype = 3,\n             linewidth = 1) +\n  geom_hline(data = df_meansel,\n             aes(yintercept = mean),\n             linetype = 8,\n             color = \"blue\",\n             linewidth = 1) +\n  geom_errorbar(aes(ymin = mean - se,\n                    ymax = mean + se),\n                width = 0.2) +\n  facet_wrap(~name, scales = \"free\") +\n  theme_bw(base_size = 14) +\n  scale_y_continuous(expand = expansion(c(0, 0.1))) +\n  geom_text(aes(y = 0, label = glue::glue(\"n = {n}\")),\n            vjust = -1) +\n  labs(x = \"Grupos\",\n       y = \"Valor médio do caractere\",\n       fill = \"Grupos\")\n\n\n\n\nggsave(\"figs/mean_clusters.jpg\",\n       dpi = 600,\n       width = 12,\n       height = 6)\n\n\n7 Section info\n\nsessionInfo()\n## R version 4.2.2 (2022-10-31 ucrt)\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\n## Running under: Windows 10 x64 (build 22621)\n## \n## Matrix products: default\n## \n## locale:\n## [1] LC_COLLATE=Portuguese_Brazil.utf8  LC_CTYPE=Portuguese_Brazil.utf8   \n## [3] LC_MONETARY=Portuguese_Brazil.utf8 LC_NUMERIC=C                      \n## [5] LC_TIME=Portuguese_Brazil.utf8    \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] ggstatsplot_0.11.1 factoextra_1.0.7   metan_1.18.0       lubridate_1.9.2   \n##  [5] forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1       \n##  [9] readr_2.1.4        tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2     \n## [13] tidyverse_2.0.0    rio_0.5.29        \n## \n## loaded via a namespace (and not attached):\n##   [1] TH.data_1.1-2          minqa_1.2.5            colorspace_2.1-0      \n##   [4] ggsignif_0.6.4         estimability_1.4.1     parameters_0.21.1     \n##   [7] rstudioapi_0.15.0      ggpubr_0.6.0           farver_2.1.1          \n##  [10] ggrepel_0.9.3          fansi_1.0.4            mvtnorm_1.2-2         \n##  [13] mathjaxr_1.6-0         codetools_0.2-18       splines_4.2.2         \n##  [16] knitr_1.43             polyclip_1.10-4        zeallot_0.1.0         \n##  [19] jsonlite_1.8.7         nloptr_2.0.3           broom_1.0.5           \n##  [22] ggforce_0.4.1          compiler_4.2.2         emmeans_1.8.7         \n##  [25] backports_1.4.1        Matrix_1.6-0           fastmap_1.1.1         \n##  [28] cli_3.6.1              tweenr_2.0.2           htmltools_0.5.5       \n##  [31] tools_4.2.2            lmerTest_3.1-3         igraph_1.5.0          \n##  [34] coda_0.19-4            gtable_0.3.3           glue_1.6.2            \n##  [37] Rcpp_1.0.11            carData_3.0-5          cellranger_1.1.0      \n##  [40] vctrs_0.6.3            nlme_3.1-160           insight_0.19.3        \n##  [43] xfun_0.39              openxlsx_4.2.5.2       lme4_1.1-34           \n##  [46] timechange_0.2.0       lifecycle_1.0.3        rstatix_0.7.2         \n##  [49] dendextend_1.17.1      MASS_7.3-60            zoo_1.8-12            \n##  [52] scales_1.2.1           ragg_1.2.5             hms_1.1.3             \n##  [55] sandwich_3.0-2         rematch2_2.1.2         RColorBrewer_1.1-3    \n##  [58] yaml_2.3.7             curl_5.0.1             gridExtra_2.3         \n##  [61] reshape_0.8.9          stringi_1.7.12         paletteer_1.5.0       \n##  [64] bayestestR_0.13.1      boot_1.3-28            zip_2.3.0             \n##  [67] systemfonts_1.0.4      rlang_1.1.1            pkgconfig_2.0.3       \n##  [70] evaluate_0.21          lattice_0.20-45        labeling_0.4.2        \n##  [73] patchwork_1.1.2        htmlwidgets_1.6.2      tidyselect_1.2.0      \n##  [76] GGally_2.1.2           plyr_1.8.8             magrittr_2.0.3        \n##  [79] R6_2.5.1               generics_0.1.3         multcomp_1.4-25       \n##  [82] pillar_1.9.0           haven_2.5.3            foreign_0.8-83        \n##  [85] withr_2.5.0            survival_3.4-0         datawizard_0.8.0      \n##  [88] abind_1.4-5            car_3.1-2              utf8_1.2.3            \n##  [91] correlation_0.8.4      tzdb_0.4.0             rmarkdown_2.23        \n##  [94] viridis_0.6.3          grid_4.2.2             readxl_1.4.3          \n##  [97] data.table_1.14.8      digest_0.6.33          xtable_1.8-4          \n## [100] numDeriv_2016.8-1.1    textshaping_0.3.6      statsExpressions_1.5.1\n## [103] munsell_0.5.0          viridisLite_0.4.2"
  },
  {
    "objectID": "05_trilha.html",
    "href": "05_trilha.html",
    "title": "05: Análise de trilha para caracteres agronômicos e componentes de rendimento em genótipos de linhaça (Linum usitatissimum, L.)",
    "section": "",
    "text": "To reproduce the examples of this material, the R packages the following packages are needed.\n\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(metan)"
  },
  {
    "objectID": "05_trilha.html#encontrar-preditores-com-baixa-colinearidade",
    "href": "05_trilha.html#encontrar-preditores-com-baixa-colinearidade",
    "title": "05: Análise de trilha para caracteres agronômicos e componentes de rendimento em genótipos de linhaça (Linum usitatissimum, L.)",
    "section": "\n3.1 Encontrar preditores com baixa colinearidade",
    "text": "3.1 Encontrar preditores com baixa colinearidade\n\ndf |&gt; \n  group_by(epoca) |&gt; \n  non_collinear_vars(-c(rgpla))\n## # A tibble: 12 × 3\n##    epoca Parameter        values                                \n##    &lt;chr&gt; &lt;chr&gt;            &lt;chr&gt;                                 \n##  1 E1    Predictors       8                                     \n##  2 E1    VIF              3.436                                 \n##  3 E1    Condition Number 14.879                                \n##  4 E1    Determinant      0.0544051003                          \n##  5 E1    Selected         nr, nc, areac, icc, ap, ac, ngcap, mmg\n##  6 E1    Removed          ng, mc                                \n##  7 E2    Predictors       8                                     \n##  8 E2    VIF              5.911                                 \n##  9 E2    Condition Number 24.187                                \n## 10 E2    Determinant      0.0288690825                          \n## 11 E2    Selected         areac, mmg, icc, nr, ngcap, mc, ac, ap\n## 12 E2    Removed          nc, ng"
  },
  {
    "objectID": "05_trilha.html#colinearidade-dentro-de-cada-época",
    "href": "05_trilha.html#colinearidade-dentro-de-cada-época",
    "title": "05: Análise de trilha para caracteres agronômicos e componentes de rendimento em genótipos de linhaça (Linum usitatissimum, L.)",
    "section": "\n3.2 Colinearidade dentro de cada época",
    "text": "3.2 Colinearidade dentro de cada época\n\ncoldiag &lt;- \n  df |&gt; \n  group_by(epoca) |&gt;\n  colindiag(-c(rgpla, ng, mc))\n\n\n## INDICADORES\ncold &lt;- gmd(coldiag)\n# export(cold, \"data/path_results.xlsx\", which = \"coldiag\")      \n\n## VIFS\nvifs &lt;- get_model_data(coldiag, \"VIF\")\n# export(vifs, \"data/path_results.xlsx\", which = \"vifs\")"
  },
  {
    "objectID": "03_indice_selecao.html",
    "href": "03_indice_selecao.html",
    "title": "03: Seleção multivariada de genótipos de linho usando o índice MGIDI",
    "section": "",
    "text": "1 Pacotes\n\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(metan)\n\n\n2 Dados\n\ndf &lt;-\n  import(\"data/data_mgidi.csv\") |&gt; \n  remove_rows_na() |&gt; \n  filter(epoca == \"E1\") |&gt; \n  mutate(cp = ap - ac, .before = ap) |&gt; \n  select(-c(epoca, ap, ac, icc))\n\n\n3 Índice MGIDI\n\nmod_mgidi &lt;-\n  df |&gt; \n  mgidi(ideotype = c(\"l, h, h, h, h, h, h,  h, h\"),\n        weights = c(2, 5, 5, 1, 1, 5, 5, 2, 2),\n        SI = 25)\n## \n## -------------------------------------------------------------------------------\n## Principal Component Analysis\n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 4\n##   PC    Eigenvalues `Variance (%)` `Cum. variance (%)`\n##   &lt;chr&gt;       &lt;dbl&gt;          &lt;dbl&gt;               &lt;dbl&gt;\n## 1 PC1          4.43          49.2                 49.2\n## 2 PC2          1.72          19.1                 68.3\n## 3 PC3          1.03          11.4                 79.8\n## 4 PC4          0.94          10.4                 90.2\n## 5 PC5          0.62           6.86                97.1\n## 6 PC6          0.23           2.56                99.6\n## 7 PC7          0.02           0.24                99.9\n## 8 PC8          0.01           0.11               100. \n## 9 PC9          0              0.02               100  \n## -------------------------------------------------------------------------------\n## Factor Analysis - factorial loadings after rotation-\n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 6\n##   VAR     FA1   FA2   FA3 Communality Uniquenesses\n##   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n## 1 cp     0.13 -0.13  0.78        0.65         0.35\n## 2 nc    -0.9   0.13 -0.32        0.93         0.07\n## 3 ng    -0.93 -0.12 -0.27        0.95         0.05\n## 4 areac -0.55 -0.18  0.31        0.44         0.56\n## 5 nr    -0.32 -0.18 -0.67        0.58         0.42\n## 6 mc    -0.95  0.11 -0.25        0.97         0.03\n## 7 rgpla -0.95  0.12 -0.23        0.97         0.03\n## 8 ngcap -0.18 -0.92  0.08        0.88         0.12\n## 9 mmg   -0.24  0.86  0.06        0.81         0.19\n## -------------------------------------------------------------------------------\n## Comunalit Mean: 0.7976177 \n## -------------------------------------------------------------------------------\n## Selection differential \n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 8\n##   VAR   Factor      Xo      Xs       SD SDperc sense     goal\n##   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n## 1 nc    FA1     33.5    59.8    26.2    78.3   increase   100\n## 2 ng    FA1    216.    390.    174.     80.3   increase   100\n## 3 areac FA1      0.394   0.423   0.0286  7.24  increase   100\n## 4 mc    FA1      1.64    3.12    1.48   90.8   increase   100\n## 5 rgpla FA1      1.22    2.36    1.15   94.1   increase   100\n## 6 ngcap FA2      6.47    6.51    0.0449  0.694 increase   100\n## 7 mmg   FA2      5.60    6.50    0.906  16.2   increase   100\n## 8 cp    FA3     27.6    26.5    -1.09   -3.95  decrease   100\n## 9 nr    FA3      1.29    1.69    0.400  31.0   increase   100\n## ------------------------------------------------------------------------------\n## Selected genotypes\n## -------------------------------------------------------------------------------\n## G228 G4 G48 G13 G222 G31 G9 G36 G28 G29 G10 G21 G23 G41 G14 G17\n## -------------------------------------------------------------------------------\nplot(mod_mgidi)\n\n\n\nplot(mod_mgidi, type  = \"contribution\")\n\n\n\n\ndf_plot &lt;-\n  gmd(mod_mgidi) %&gt;%\n  select_cols(VAR, Xo, Xs, SDperc, sense) %&gt;%\n  mutate(strategy = \"Multivariado\") |&gt; \n  replace_string(sense, pattern = \"increase\", replacement = \"Positivo desejado\") |&gt; \n  replace_string(sense, pattern = \"decrease\", replacement = \"Negativo desejado\")\n\n\n4 Seleção univariada para RG\n\nsel_uni &lt;- muni &lt;- df |&gt; slice_max(rgpla, n = 16)\n\nmuni &lt;- \n  sel_uni |&gt; \n  mean_by() |&gt; \n  pivot_longer(cols = everything(),\n               values_to = \"Xs\",\n               names_to = \"VAR\")\n\nmger &lt;- \n  df |&gt; \n  mean_by() |&gt; \n  pivot_longer(cols = everything(),\n               values_to = \"Xo\",\n               names_to = \"VAR\")\n\nsd_uni &lt;-\n  left_join(mger, muni) |&gt; \n  mutate(SDperc = (Xs - Xo) / Xo * 100) |&gt; \n  left_join(df_plot |&gt; select(VAR, sense)) |&gt; \n  mutate(strategy = \"Univariado\")\n\ndf_plot2 &lt;- \n  bind_rows(df_plot, sd_uni)\n\n\n\nggplot(df_plot2, aes(SDperc, VAR)) +\n  geom_col(position = position_dodge(),\n           aes(fill = sense),\n           width = 1,\n           linewidth = 0.1,\n           color = \"black\") +\n  geom_text(aes(label = round(SDperc, 2),\n                hjust = ifelse(SDperc &gt; 0, -0.1, 1.1)),\n            size = 4) + \n  facet_wrap(~strategy) +\n  theme_bw(base_size = 18) +\n  theme(axis.text = element_text(size = 12, color = \"black\"),\n        axis.ticks.length = unit(0.2, \"cm\"),\n        panel.grid.minor = element_blank(),\n        legend.title = element_blank(),\n        legend.position = \"bottom\",\n        panel.spacing.x = unit(0, \"cm\")) +\n  geom_vline(xintercept = 0, linetype = 1, linewidth = 1) +\n  scale_x_continuous(expand = expansion(c(0.2, 0.3))) +\n  labs(y = \"Caracteres avaliados\",\n       x = \"Diferencial de seleção (%)\") +\n  geom_vline(xintercept = 0)\n\n\n\n\nggsave(\"figs/gain_mgidi.jpg\",\n       width = 8,\n       height = 5)\n\n\nplot(mod_mgidi, SI = 25)\n\n\n\nggsave(\"figs/mgidi_radar.jpg\",\n       width = 6,\n       height = 6)\n\n\n5 Histogram\n\nlibrary(ggridges)\ndf_sel &lt;- \n  df |&gt; \n  mutate(selecionado = ifelse(gen %in% mod_mgidi$sel_gen, \"Selecionado\", \"Não selecionado\"))\n\nlibrary(ggExtra)\nlibrary(ggrepel)\n\np1 &lt;-\nggplot(df_sel, aes(rgpla, mmg, color = selecionado, group = selecionado)) + \n  geom_point(size = 2, alpha = 0.7) +\n  theme_bw(base_size = 18) +\n  geom_text_repel(data = df_sel |&gt;  filter(selecionado == \"Selecionado\"),\n                  aes(label = gen),\n                  show.legend = FALSE,\n                  size = 3) +\n  theme(legend.position = \"bottom\",\n        panel.grid.minor = element_blank())+\n  labs(color = \"\",\n       y = \"Massa de mil grãos (g)\",\n       x = \"Rendimento de grãos por planta (g)\")\n\nggMarginal(p1, type=\"boxplot\", groupFill = TRUE)\n\n\n\n\n\n6 Venn plot\n\nsel_mgidi &lt;- sel_gen(mod_mgidi) \nsel_uni &lt;- sel_uni  |&gt; pull(gen)\nvenn_plot(sel_mgidi,\n          sel_uni,\n          names = c(\"MGIDI\", \"Univariado\"))\n\n\n\n\n\n7 Section info\n\nsessionInfo()\n## R version 4.2.2 (2022-10-31 ucrt)\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\n## Running under: Windows 10 x64 (build 22621)\n## \n## Matrix products: default\n## \n## locale:\n## [1] LC_COLLATE=Portuguese_Brazil.utf8  LC_CTYPE=Portuguese_Brazil.utf8   \n## [3] LC_MONETARY=Portuguese_Brazil.utf8 LC_NUMERIC=C                      \n## [5] LC_TIME=Portuguese_Brazil.utf8    \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] ggrepel_0.9.3   ggExtra_0.10.0  ggridges_0.5.4  metan_1.18.0   \n##  [5] lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0   dplyr_1.1.2    \n##  [9] purrr_1.0.1     readr_2.1.4     tidyr_1.3.0     tibble_3.2.1   \n## [13] ggplot2_3.4.2   tidyverse_2.0.0 rio_0.5.29     \n## \n## loaded via a namespace (and not attached):\n##  [1] nlme_3.1-160        RColorBrewer_1.1-3  numDeriv_2016.8-1.1\n##  [4] tools_4.2.2         utf8_1.2.3          R6_2.5.1           \n##  [7] colorspace_2.1-0    withr_2.5.0         tidyselect_1.2.0   \n## [10] GGally_2.1.2        curl_5.0.1          compiler_4.2.2     \n## [13] textshaping_0.3.6   cli_3.6.1           labeling_0.4.2     \n## [16] scales_1.2.1        systemfonts_1.0.4   digest_0.6.33      \n## [19] foreign_0.8-83      minqa_1.2.5         rmarkdown_2.23     \n## [22] pkgconfig_2.0.3     htmltools_0.5.5     lme4_1.1-34        \n## [25] fastmap_1.1.1       htmlwidgets_1.6.2   rlang_1.1.1        \n## [28] readxl_1.4.3        rstudioapi_0.15.0   shiny_1.7.4.1      \n## [31] farver_2.1.1        generics_0.1.3      jsonlite_1.8.7     \n## [34] zip_2.3.0           magrittr_2.0.3      patchwork_1.1.2    \n## [37] Matrix_1.6-0        Rcpp_1.0.11         munsell_0.5.0      \n## [40] fansi_1.0.4         lifecycle_1.0.3     stringi_1.7.12     \n## [43] yaml_2.3.7          mathjaxr_1.6-0      MASS_7.3-60        \n## [46] plyr_1.8.8          grid_4.2.2          promises_1.2.0.1   \n## [49] miniUI_0.1.1.1      lattice_0.20-45     haven_2.5.3        \n## [52] splines_4.2.2       hms_1.1.3           knitr_1.43         \n## [55] pillar_1.9.0        boot_1.3-28         glue_1.6.2         \n## [58] evaluate_0.21       data.table_1.14.8   vctrs_0.6.3        \n## [61] nloptr_2.0.3        tzdb_0.4.0          tweenr_2.0.2       \n## [64] httpuv_1.6.11       cellranger_1.1.0    gtable_0.3.3       \n## [67] polyclip_1.10-4     reshape_0.8.9       xfun_0.39          \n## [70] ggforce_0.4.1       openxlsx_4.2.5.2    mime_0.12          \n## [73] xtable_1.8-4        later_1.3.1         ragg_1.2.5         \n## [76] lmerTest_3.1-3      timechange_0.2.0    ellipsis_0.3.2"
  },
  {
    "objectID": "01_medias.html",
    "href": "01_medias.html",
    "title": "01: Desempenho agronômico do linho em diferentes épocas de semeadura",
    "section": "",
    "text": "To reproduce the examples of this material, the R packages the following packages are needed.\n\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(AgroR)\nlibrary(metan)"
  },
  {
    "objectID": "01_medias.html#rendimento-de-grãos",
    "href": "01_medias.html#rendimento-de-grãos",
    "title": "01: Desempenho agronômico do linho em diferentes épocas de semeadura",
    "section": "\n3.1 Rendimento de grãos",
    "text": "3.1 Rendimento de grãos\n\nmodrg &lt;- with(df_p,\n            PSUBDBC(epoca, cultivar, bloco, rgha,\n                    xlab = \"Épocas de semeadura\"))\n## \n## -----------------------------------------------------------------\n## Normality of errors\n## -----------------------------------------------------------------\n##                          Method Statistic    p.value\n##  Shapiro-Wilk normality test(W) 0.8962594 0.01794671\n## \n## \n## \n## -----------------------------------------------------------------\n## Homogeneity of Variances\n## -----------------------------------------------------------------\n## Plot\n##                               Method Statistic      p.value\n##  Bartlett test(Bartlett's K-squared)  27.67379 4.252128e-06\n## \n## \n## ----------------------------------------------------\n## Split-plot\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared)  2.030255 0.1541947\n## \n## \n## ----------------------------------------------------\n## Interaction\n##                               Method Statistic     p.value\n##  Bartlett test(Bartlett's K-squared)  23.33425 0.001490467\n## \n## \n## -----------------------------------------------------------------\n## Additional Information\n## -----------------------------------------------------------------\n## \n## CV1 (%) =  14.97\n## CV2 (%) =  34.61\n## Mean =  743.825\n## Median =  533.9\n## \n## -----------------------------------------------------------------\n## Analysis of Variance\n## -----------------------------------------------------------------\n##         Df Sum Sq      Mean Sq     F value     Pr(&gt;F) \n## F1      3  6881050.432 2293683.477 185.0987045 p&lt;0.001\n## Block   2     2873.868    1436.934   0.1159596 0.892  \n## Error A 6    74350.066   12391.678                    \n## F2      1     4298.727    4298.727   0.0648632 0.805  \n## F1 x F2 3   105689.020   35229.673   0.5315782 0.673  \n## Error B 8   530189.913   66273.739                    \n## -----------------------------------------------------------------\n## No significant interaction\n## -----------------------------------------------------------------\n## \n## -----------------------------------------------------------------\n## F1\n## -----------------------------------------------------------------\n## Multiple Comparison Test: Tukey HSD \n##         resp groups\n## E1 1469.8333      a\n## E2 1045.8667      b\n## E4  236.1667      c\n## E3  223.4333      c\n## \n## \n## -----------------------------------------------------------------\n## Isolated factors 2 not significant\n## -----------------------------------------------------------------\n##       Mean\n## D 730.4417\n## M 757.2083\n  \nmodrg$graph1 +\n  labs(x = \"Épocas de semeadura\",\n       y = expression(Rendimento~de~grãos~(kg~ha^{-1})))"
  },
  {
    "objectID": "01_medias.html#massa-de-mil-grãos",
    "href": "01_medias.html#massa-de-mil-grãos",
    "title": "01: Desempenho agronômico do linho em diferentes épocas de semeadura",
    "section": "\n3.2 Massa de mil grãos",
    "text": "3.2 Massa de mil grãos\n\nmodmmg &lt;- with(df_p,\n            PSUBDBC(epoca, cultivar, bloco, mmg))\n## \n## -----------------------------------------------------------------\n## Normality of errors\n## -----------------------------------------------------------------\n##                          Method Statistic   p.value\n##  Shapiro-Wilk normality test(W) 0.9587968 0.4147291\n## \n## \n## \n## -----------------------------------------------------------------\n## Homogeneity of Variances\n## -----------------------------------------------------------------\n## Plot\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared)  1.522785 0.6770217\n## \n## \n## ----------------------------------------------------\n## Split-plot\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared) 0.3166758 0.5736123\n## \n## \n## ----------------------------------------------------\n## Interaction\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared)  7.564106 0.3725931\n## \n## \n## -----------------------------------------------------------------\n## Additional Information\n## -----------------------------------------------------------------\n## \n## CV1 (%) =  17.2\n## CV2 (%) =  11.93\n## Mean =  4.8387\n## Median =  4.9463\n## \n## -----------------------------------------------------------------\n## Analysis of Variance\n## -----------------------------------------------------------------\n##         Df     Sum Sq   Mean Sq    F value Pr(&gt;F)\n## F1       3 22.2493125 7.4164375 10.7060422  0.008\n## Block    2  0.6355228 0.3177614  0.4587063  0.653\n## Error A  6  4.1564029 0.6927338                  \n## F2       1  0.9561335 0.9561335  2.8715898  0.129\n## F1 x F2  3  2.3794528 0.7931509  2.3820984  0.145\n## Error B  8  2.6637050 0.3329631                  \n## -----------------------------------------------------------------\n## No significant interaction\n## -----------------------------------------------------------------\n## \n## -----------------------------------------------------------------\n## F1\n## -----------------------------------------------------------------\n## Multiple Comparison Test: Tukey HSD \n##        resp groups\n## E2 5.857779      a\n## E1 5.743322      a\n## E4 3.898390      b\n## E3 3.855251      b\n## \n## \n## -----------------------------------------------------------------\n## Isolated factors 2 not significant\n## -----------------------------------------------------------------\n##       Mean\n## D 5.038282\n## M 4.639089\n# prg &lt;- \n  modmmg$graph1 +\n  labs(x = \"Épocas de semeadura\",\n       y = \"Massa de mil grãos (g)\")"
  },
  {
    "objectID": "01_medias.html#número-de-cápsulas",
    "href": "01_medias.html#número-de-cápsulas",
    "title": "01: Desempenho agronômico do linho em diferentes épocas de semeadura",
    "section": "\n3.3 Número de cápsulas",
    "text": "3.3 Número de cápsulas\n\nmodnc &lt;- with(df_p,\n            PSUBDBC(epoca, cultivar, bloco, nc))\n## \n## -----------------------------------------------------------------\n## Normality of errors\n## -----------------------------------------------------------------\n##                          Method Statistic   p.value\n##  Shapiro-Wilk normality test(W) 0.9498939 0.2695177\n## \n## \n## \n## -----------------------------------------------------------------\n## Homogeneity of Variances\n## -----------------------------------------------------------------\n## Plot\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared)  1.510963 0.6797424\n## \n## \n## ----------------------------------------------------\n## Split-plot\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared) 0.0277831 0.8676198\n## \n## \n## ----------------------------------------------------\n## Interaction\n##                               Method Statistic   p.value\n##  Bartlett test(Bartlett's K-squared)  2.553598 0.9230073\n## \n## \n## -----------------------------------------------------------------\n## Additional Information\n## -----------------------------------------------------------------\n## \n## CV1 (%) =  32.15\n## CV2 (%) =  9.72\n## Mean =  21.7385\n## Median =  21\n## \n## -----------------------------------------------------------------\n## Analysis of Variance\n## -----------------------------------------------------------------\n##         Df     Sum Sq   Mean Sq    F value Pr(&gt;F)\n## F1       3 1076.18417 358.72806  7.3462116  0.020\n## Block    2   38.21202  19.10601  0.3912624  0.692\n## Error A  6  292.99025  48.83171                  \n## F2       1   66.32847  66.32847 14.8571981  0.005\n## F1 x F2  3   45.72412  15.24137  3.4139807  0.073\n## Error B  8   35.71520   4.46440                  \n## -----------------------------------------------------------------\n## No significant interaction\n## -----------------------------------------------------------------\n## \n## -----------------------------------------------------------------\n## F1\n## -----------------------------------------------------------------\n## Multiple Comparison Test: Tukey HSD \n##        resp groups\n## E1 31.99954      a\n## E2 23.40231     ab\n## E3 16.09656      b\n## E4 15.45556      b\n## \n## \n## \n## -----------------------------------------------------------------\n## F2\n## -----------------------------------------------------------------\n## Multiple Comparison Test: Tukey HSD \n##       resp groups\n## D 23.40093      a\n## M 20.07606      b\npnce &lt;-\n  modnc$graph1 +\n  labs(x = \"Épocas de semeadura\",\n       y = \"Número de cápsulas\")\n\npncc &lt;-\n  modnc$graph2 +\n  labs(x = \"Cultivares\",\n       y = \"Número de cápsulas\")\n\narrange_ggplot(pnce, pncc, widths = c(0.75, 0.25))"
  },
  {
    "objectID": "00_about.html",
    "href": "00_about.html",
    "title": "",
    "section": "",
    "text": "Code\nSobre este material\nNeste website você pode encontrar os dados e scripts utilizados nas análises dos seguintes trabalhos apresentados na 67\\(^a\\) Reunião Anual da Região Brasileira da Sociedade Internacional de Biometria (RBras)\n\nSeleção de modelos de crescimento para descrição da área foliar do linho\n\nEvolução da área foliar de duas cultivares de linho revelada pelo modelo Logístico\n\nO modelo logístico e seus pontos críticos sugerem diferença no padrão de expansão foliar de cultivares de linho\n\nPadrão de emissão de folhas de cultivares de linho revelado pelo modelo logístico e seus pontos críticos\nComo reproduzir?\n\nFaça o Download dos dados do repositório github;\nAbra o projeto paper_flaxgrowth..Rproj no RStudio;\nOpcionalmente, altere funções e argumentos;\nRe-knit o documento para ver os resultados.\nLicença\nEste conteúdo está licenciado com uma Licença Creative Commons - Atribuição-NãoComercial-CompartilhaIgual 4.0 Internacional. O resumo legível da licença afirma que você tem o direito de:\n\nCompartilhar — copie e redistribua o material em qualquer meio ou formato.\nAdaptar — remixar, transformar e construir sobre o material\nAtribuir — Você deve dar o crédito apropriado, fornecer um link para a licença e indicar se foram feitas alterações. Você deve fazê-lo sob quaisquer circunstâncias razoáveis, mas de forma alguma sugerindo que o licenciante endossa você ou seu uso.\n\nEsta licença e válida sob os seguintes termos:\n\n\nNão comercial (NC) — Você não pode usar o material para fins comerciais.\n\nShare Alike (SA) — Se você remixar, transformar ou desenvolver o material, deverá distribuir suas contribuições sob a mesma licença do original.\n\nSem restrições adicionais — Você não pode aplicar termos legais ou medidas tecnológicas que restrinjam legalmente outras pessoas de fazer qualquer coisa que a licença permita.\nSelo DC\n\nO selo selo Democratizando Conhecimento (DC) é uma ideia criada pelo Prof. Ben Dêivid. O selo é compatível com a licença Creative Commons CC BY NC SA 4.0 e é utilizado aqui para garantir que o acesso de todo esse material seja livre, gratuíto e de código aberto.\nVisite-nos!\n\n\nWarning: package 'leaflet' was built under R version 4.2.3\n\n\n\n\n\n\n\nNúmero de acessos nesta página"
  },
  {
    "objectID": "02_selecao_direta_indireta.html",
    "href": "02_selecao_direta_indireta.html",
    "title": "02: Diferencial de seleção direto e indireto visando seleção de genótipos de linho",
    "section": "",
    "text": "1 Pacotes\n\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(metan)\n\ngdi &lt;- function(dfrc,\n                gen,\n                vars =  NULL,\n                si = 0.2,\n                ideotype = NULL){\n  \n  if(missing(vars)){\n    gen &lt;-  dfrc |&gt; select({{gen}})\n    vars &lt;- dfrc |&gt; select_numeric_cols()\n    dfrc &lt;- bind_cols(gen, vars)\n  } else{\n    gen &lt;-  dfrc |&gt; select({{gen}})\n    vars &lt;- dfrc |&gt; select({{vars}})\n    dfrc &lt;- bind_cols(gen, vars)\n  }\n  \n  mger &lt;- dfrc |&gt; mean_by()\n  dfrc_num &lt;- dfrc |&gt; select_numeric_cols()\n  nvars &lt;- ncol(dfrc_num)\n  ngen &lt;- nrow(dfrc_num)\n  \n  varn &lt;- colnames(dfrc_num)\n  \n  ifelse(is.null(ideotype), \n         ideotype &lt;- rep(\"h\", nvars),\n         ideotype &lt;- ideotype)\n  \n  results &lt;- data.frame(matrix(NA, nvars, nvars))\n  results_perc &lt;- data.frame(matrix(NA, nvars, nvars))\n  ngensel &lt;- ceiling(ngen * si)\n  selgen &lt;- list()\n  \n  # selecao direta e indireta\n  for (i  in 1:nvars){\n    if(ideotype[i] == \"h\"){\n      msel &lt;- \n        dfrc |&gt; \n        slice_max(dfrc_num[, i], n = ngensel)\n      \n      selgen[[i]] &lt;- msel |&gt; pull(1)\n      msel &lt;- msel |&gt;  mean_by()\n      results[i, ] &lt;- msel - mger\n      results_perc[i, ] &lt;- (msel - mger) / mger * 100\n    } else{\n      msel &lt;- \n        dfrc |&gt; \n        slice_min(dfrc_num[, i], n = ngensel) |&gt; \n        mean_by()\n      \n      selgen[[i]] &lt;- msel |&gt; pull(1)\n      \n      msel &lt;- msel |&gt;  mean_by()\n      \n      results[i, ] &lt;- msel - mger\n      results_perc[i, ] &lt;- (msel - mger) / mger * 100\n      \n    }\n  }\n  colnames(results) &lt;- rownames(results) &lt;- varn\n  colnames(results_perc) &lt;- rownames(results_perc) &lt;-  varn\n  print(selgen)\n  names(selgen) &lt;- varn\n  \n  return(list(results = results,\n              results_perc = results_perc,\n              selgen = selgen))\n}\n\n\n\n######## plotar os valores\nplot_gdi &lt;- function(model,\n                     type = c(\"percent\", \"absolut\"),\n                     range_scale = NULL){\n  type &lt;- type[1]\n  \n  if(type == \"percent\"){\n    df_plot &lt;- \n      model$results_perc |&gt; \n      make_long()\n    \n  } else{\n    df_plot &lt;- \n      model$results |&gt; \n      make_long()\n  }\n  \n  \n  fcts &lt;- as.character(unique(factor(df_plot$ENV)))\n  df_plot &lt;-\n    df_plot %&gt;%\n    mutate(lwid = ifelse((ENV == GEN), 1.5, 0.5)) %&gt;%\n    mutate(ENV =  factor(as.factor(ENV), levels = c(fcts, \"linear\"))) %&gt;%\n    mutate(GEN = factor(as.factor(GEN), levels = rev(fcts))) %&gt;%\n    arrange(lwid)\n  \n  \n  \n  ifelse(is.null(range_scale), \n         rang &lt;- range(df_plot$Y), \n         rang &lt;- range_scale)\n  ggplot(df_plot, aes(ENV, GEN, fill = Y)) +\n    geom_tile(color = \"black\",\n              linewidth = df_plot$lwid) +\n    scale_fill_gradient2(low = \"red\",\n                         high = \"blue\",\n                         mid = \"white\",\n                         midpoint = mean(df_plot$Y),\n                         limit = rang,\n                         space = \"Lab\",\n                         na.value = \"transparent\") +\n    geom_text(aes(label = round(Y, 1)),\n              color = \"black\",\n              size = 3) +\n    guides(fill = guide_colourbar(label = TRUE,\n                                  draw.ulim = TRUE,\n                                  draw.llim = TRUE,\n                                  frame.colour = \"black\",\n                                  ticks = TRUE,\n                                  nbin = 10,\n                                  label.position = \"right\",\n                                  barwidth = 1,\n                                  barheight = 11,\n                                  direction = 'vertical')) +\n    scale_y_discrete(expand = expansion(mult = c(0,0))) +\n    scale_x_discrete(position = \"top\",\n                     expand = expansion(0)) +\n    labs(x = NULL,\n         y = NULL,\n         fill = \"SD (%)\")\n}\n\n\n2 Dados\n\ndf &lt;-\n  import(\"data/data_mgidi.csv\") |&gt; \n  remove_rows_na() |&gt; \n  filter(epoca %in% c(\"E1\", \"E4\")) |&gt; \n  replace_string(epoca, pattern = \"E4\", replacement = \"E2\")\n\n# por época\ndfe &lt;- \n  df |&gt; \n  split_factors(epoca)\n\n\n3 Correlação parcial\n\n# correlação parcial\nres_part &lt;- lapply(dfe, corr_coef)\np1 &lt;- network_plot(res_part$E1)\np2 &lt;- network_plot(res_part$E2)\narrange_ggplot(p1, p2)\n\n\n\nggsave(\"figs/corr_linear.jpg\",\n       width = 10,\n       height = 6)\n\n\n4 Histogram\n\nlibrary(ggridges)\n\nggplot(df, aes(rgpla)) +\n  geom_histogram(aes(fill = epoca), color = \"black\",\n                 alpha = 0.5)\n\n\n\n\nggplot(df, aes(rgpla, y = epoca)) +\n  geom_density_ridges(aes(fill = epoca),\n                      scale = 3) +\n  theme_bw() +\n  scale_y_discrete(expand = expansion(c(0.2, 0.2))) +\n  theme_bw(base_size = 18) +\n  theme(legend.position = \"bottom\")+\n  labs(fill = \"\",\n       x = \"Rendimento de grãos por planta (g)\",\n       y = \"Época de semeadura\")\n\n\n\nggsave(\"figs/density_gy.jpg\",\n       width = 6,\n       height = 6)\n\n\n5 Diferencial de seleção\n\n\n# diferencial de seleção por época\nres_epoca &lt;- lapply(dfe, gdi, gen,\n                    si = 0.25,\n                    ideotype = c(\"l\", rep(\"h\", 10)))\n## [[1]]\n## [1] 67.52632\n## \n## [[2]]\n##  [1] \"G46\" \"G44\" \"G30\" \"G9\"  \"G26\" \"G49\" \"G10\" \"G17\" \"G27\" \"G48\" \"G34\" \"G35\"\n## [13] \"G32\" \"G14\" \"G4\"  \"G51\" \"G41\"\n## \n## [[3]]\n##  [1] \"G228\" \"G4\"   \"G48\"  \"G13\"  \"G36\"  \"G233\" \"G29\"  \"G41\"  \"G230\" \"G222\"\n## [11] \"G216\" \"G9\"   \"G28\"  \"G31\"  \"G3\"   \"G226\" \"G20\"  \"G19\"  \"G33\" \n## \n## [[4]]\n##  [1] \"G228\" \"G4\"   \"G48\"  \"G13\"  \"G233\" \"G36\"  \"G31\"  \"G222\" \"G41\"  \"G230\"\n## [11] \"G29\"  \"G9\"   \"G3\"   \"G33\"  \"G223\" \"G216\" \"G14\" \n## \n## [[5]]\n##  [1] \"G222\" \"G31\"  \"G228\" \"G219\" \"G30\"  \"G9\"   \"G10\"  \"G17\"  \"G15\"  \"G5\"  \n## [11] \"G45\"  \"G223\" \"G28\"  \"G235\" \"G8\"   \"G47\"  \"G224\"\n## \n## [[6]]\n##  [1] \"G230\" \"G215\" \"G232\" \"G29\"  \"G228\" \"G222\" \"G219\" \"G233\" \"G38\"  \"G41\" \n## [11] \"G47\"  \"G27\"  \"G20\"  \"G19\"  \"G40\"  \"G16\"  \"G14\"  \"G36\"  \"G225\" \"G10\" \n## [21] \"G226\" \"G13\"  \"G216\" \"G49\"  \"G218\" \"G33\"  \"G235\" \"G35\" \n## \n## [[7]]\n##  [1] \"G228\" \"G4\"   \"G48\"  \"G13\"  \"G36\"  \"G222\" \"G29\"  \"G41\"  \"G230\" \"G233\"\n## [11] \"G216\" \"G9\"   \"G28\"  \"G3\"   \"G31\"  \"G20\"  \"G10\" \n## \n## [[8]]\n##  [1] \"G228\" \"G4\"   \"G48\"  \"G13\"  \"G36\"  \"G222\" \"G29\"  \"G9\"   \"G233\" \"G41\" \n## [11] \"G28\"  \"G3\"   \"G216\" \"G31\"  \"G230\" \"G20\"  \"G215\"\n## \n## [[9]]\n##  [1] \"G27\"  \"G234\" \"G22\"  \"G44\"  \"G5\"   \"G9\"   \"G215\" \"G20\"  \"G46\"  \"G232\"\n## [11] \"G29\"  \"G19\"  \"G39\"  \"G40\"  \"G16\"  \"G3\"   \"G1\"  \n## \n## [[10]]\n##  [1] \"G35\"  \"G31\"  \"G235\" \"G5\"   \"G2\"   \"G229\" \"G225\" \"G228\" \"G224\" \"G222\"\n## [11] \"G234\" \"G223\" \"G3\"   \"G39\"  \"G33\"  \"G40\"  \"G44\" \n## \n## [[11]]\n##  [1] \"G28\"  \"G27\"  \"G50\"  \"G21\"  \"G20\"  \"G29\"  \"G30\"  \"G215\" \"G19\"  \"G48\" \n## [11] \"G22\"  \"G9\"   \"G23\"  \"G216\" \"G222\" \"G46\"  \"G10\" \n## \n## [[1]]\n## [1] 60.53333\n## \n## [[2]]\n##  [1] \"G193\" \"G170\" \"G160\" \"G169\" \"G181\" \"G166\" \"G167\" \"G161\" \"G180\" \"G183\"\n## [11] \"G178\" \"G207\" \"G201\" \"G164\"\n## \n## [[3]]\n##  [1] \"G205\" \"G177\" \"G206\" \"G161\" \"G195\" \"G196\" \"G188\" \"G170\" \"G201\" \"G197\"\n## [11] \"G175\" \"G200\" \"G167\" \"G203\" \"G211\"\n## \n## [[4]]\n##  [1] \"G177\" \"G206\" \"G170\" \"G195\" \"G205\" \"G161\" \"G200\" \"G197\" \"G196\" \"G203\"\n## [11] \"G175\" \"G163\" \"G174\" \"G201\"\n## \n## [[5]]\n##  [1] \"G165\" \"G167\" \"G192\" \"G160\" \"G169\" \"G168\" \"G200\" \"G191\" \"G190\" \"G195\"\n## [11] \"G161\" \"G179\" \"G188\" \"G163\"\n## \n## [[6]]\n##  [1] \"G205\" \"G197\" \"G196\" \"G177\" \"G163\" \"G206\" \"G188\" \"G162\" \"G161\" \"G185\"\n## [11] \"G190\" \"G175\" \"G164\" \"G189\" \"G192\" \"G202\" \"G180\" \"G174\" \"G183\" \"G200\"\n## [21] \"G191\" \"G195\" \"G178\" \"G210\" \"G168\" \"G169\" \"G171\" \"G184\" \"G204\" \"G203\"\n## [31] \"G193\" \"G211\" \"G186\" \"G214\" \"G212\" \"G173\" \"G160\" \"G194\" \"G182\" \"G187\"\n## [41] \"G201\" \"G207\" \"G208\" \"G165\" \"G170\" \"G199\" \"G167\" \"G198\" \"G181\" \"G166\"\n## [51] \"G179\" \"G213\" \"G209\" \"G172\" \"G176\"\n## \n## [[7]]\n##  [1] \"G177\" \"G206\" \"G195\" \"G170\" \"G205\" \"G161\" \"G196\" \"G197\" \"G200\" \"G167\"\n## [11] \"G203\" \"G163\" \"G201\" \"G188\"\n## \n## [[8]]\n##  [1] \"G177\" \"G195\" \"G161\" \"G206\" \"G205\" \"G170\" \"G197\" \"G200\" \"G196\" \"G203\"\n## [11] \"G163\" \"G167\" \"G174\" \"G169\" \"G160\"\n## \n## [[9]]\n##  [1] \"G161\" \"G192\" \"G189\" \"G202\" \"G185\" \"G180\" \"G174\" \"G183\" \"G200\" \"G191\"\n## [11] \"G197\" \"G195\" \"G178\" \"G210\"\n## \n## [[10]]\n##  [1] \"G192\" \"G170\" \"G204\" \"G200\" \"G195\" \"G194\" \"G163\" \"G184\" \"G214\" \"G168\"\n## [11] \"G197\" \"G183\" \"G203\" \"G177\"\n## \n## [[11]]\n##  [1] \"G189\" \"G210\" \"G180\" \"G165\" \"G202\" \"G160\" \"G196\" \"G161\" \"G197\" \"G185\"\n## [11] \"G191\" \"G167\" \"G195\" \"G188\"\ng1 &lt;- plot_gdi(res_epoca$E1, range_scale = c(-70, 195))\ng2 &lt;- plot_gdi(res_epoca$E2, range_scale = c(-70, 195))\narrange_ggplot(g1, g2,\n               tag_levels = \"a\")\n\n\n\nggsave(\"figs/direct_indirect_sd.jpg\",\n       width = 10,\n       height = 5)\n\nbind &lt;- \nrbind_fill_id(res_epoca$E1$results |&gt; rownames_to_column(\"var\"),\n              res_epoca$E2$results |&gt; rownames_to_column(\"var\"),\n              .id = \"epoca\")\n\n# export(bind, \"data/sd_absoluto.xlsx\")\n\n\n6 Section info\n\nsessionInfo()\n## R version 4.2.2 (2022-10-31 ucrt)\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\n## Running under: Windows 10 x64 (build 22621)\n## \n## Matrix products: default\n## \n## locale:\n## [1] LC_COLLATE=Portuguese_Brazil.utf8  LC_CTYPE=Portuguese_Brazil.utf8   \n## [3] LC_MONETARY=Portuguese_Brazil.utf8 LC_NUMERIC=C                      \n## [5] LC_TIME=Portuguese_Brazil.utf8    \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n##  [1] ggridges_0.5.4  metan_1.18.0    lubridate_1.9.2 forcats_1.0.0  \n##  [5] stringr_1.5.0   dplyr_1.1.2     purrr_1.0.1     readr_2.1.4    \n##  [9] tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n## [13] rio_0.5.29     \n## \n## loaded via a namespace (and not attached):\n##  [1] jsonlite_1.8.7      splines_4.2.2       cellranger_1.1.0   \n##  [4] yaml_2.3.7          ggrepel_0.9.3       numDeriv_2016.8-1.1\n##  [7] pillar_1.9.0        lattice_0.20-45     glue_1.6.2         \n## [10] digest_0.6.33       RColorBrewer_1.1-3  polyclip_1.10-4    \n## [13] minqa_1.2.5         colorspace_2.1-0    htmltools_0.5.5    \n## [16] Matrix_1.6-0        plyr_1.8.8          pkgconfig_2.0.3    \n## [19] haven_2.5.3         patchwork_1.1.2     scales_1.2.1       \n## [22] tweenr_2.0.2        openxlsx_4.2.5.2    tzdb_0.4.0         \n## [25] lme4_1.1-34         ggforce_0.4.1       timechange_0.2.0   \n## [28] generics_0.1.3      farver_2.1.1        withr_2.5.0        \n## [31] cli_3.6.1           magrittr_2.0.3      readxl_1.4.3       \n## [34] evaluate_0.21       GGally_2.1.2        fansi_1.0.4        \n## [37] nlme_3.1-160        MASS_7.3-60         foreign_0.8-83     \n## [40] textshaping_0.3.6   tools_4.2.2         data.table_1.14.8  \n## [43] hms_1.1.3           lifecycle_1.0.3     munsell_0.5.0      \n## [46] zip_2.3.0           compiler_4.2.2      systemfonts_1.0.4  \n## [49] rlang_1.1.1         grid_4.2.2          nloptr_2.0.3       \n## [52] rstudioapi_0.15.0   htmlwidgets_1.6.2   labeling_0.4.2     \n## [55] rmarkdown_2.23      boot_1.3-28         gtable_0.3.3       \n## [58] lmerTest_3.1-3      reshape_0.8.9       curl_5.0.1         \n## [61] R6_2.5.1            knitr_1.43          fastmap_1.1.1      \n## [64] utf8_1.2.3          mathjaxr_1.6-0      ragg_1.2.5         \n## [67] stringi_1.7.12      Rcpp_1.0.11         vctrs_0.6.3        \n## [70] tidyselect_1.2.0    xfun_0.39"
  },
  {
    "objectID": "04_modelo_crescimento.html",
    "href": "04_modelo_crescimento.html",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "",
    "text": "To reproduce the examples of this material, the R packages the following packages are needed.\n\nlibrary(rio)\nlibrary(tidyverse)\nlibrary(metan)\nlibrary(lubridate)\nlibrary(broom)\nlibrary(emmeans)"
  },
  {
    "objectID": "04_modelo_crescimento.html#temperature",
    "href": "04_modelo_crescimento.html#temperature",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "\n2.1 Temperature",
    "text": "2.1 Temperature\n\ndft &lt;- \n  import(\"data/clima.csv\", dec = \",\") |&gt; \n  separate(hora, into = c(\"dia\", \"mes\", \"ano\")) |&gt; \n  unite(\"data\", dia, mes, ano, sep = \"/\") |&gt; \n  mutate(data = dmy(data))\n\ndftemp &lt;- \n  dft |&gt; \n  group_by(data) |&gt; \n  summarise(tmin = min(tmin),\n            tmed = mean(tmed),\n            tmax = max(tmax),\n            prec = sum(prec),\n            ur = mean(ur)) |&gt; \n  mutate(gd = tmed - 5,\n         gd2 = ((tmax + tmin) / 2) - 5) |&gt; \n  mutate(data = ymd(data))\n\ndftempe1 &lt;- \n  dftemp |&gt; \n  slice(1:79) |&gt; \n  mutate(epoca = \"E1\")\n\ndftempe2 &lt;- \n  dftemp |&gt; \n  slice(79:148) |&gt; \n  mutate(epoca = \"E2\")\n\ndftemp2 &lt;- \n  bind_rows(dftempe1, dftempe2) |&gt; \n  relocate(epoca, .before = data) |&gt; \n  group_by(epoca) |&gt; \n  mutate(gda = cumsum(gd),\n         gda2 = cumsum(gd2)) |&gt; \n  separate(data, into = c(\"ano\", \"mes\", \"dia\")) |&gt; \n  unite(\"data\", dia, mes, sep = \"/\")\n\n# GRAUS DIA\ndf\n## function (x, df1, df2, ncp, log = FALSE) \n## {\n##     if (missing(ncp)) \n##         .Call(C_df, x, df1, df2, log)\n##     else .Call(C_dnf, x, df1, df2, ncp, log)\n## }\n## &lt;bytecode: 0x000002bd27ddbed8&gt;\n## &lt;environment: namespace:stats&gt;"
  },
  {
    "objectID": "04_modelo_crescimento.html#gráfico-densidade",
    "href": "04_modelo_crescimento.html#gráfico-densidade",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "\n2.2 gráfico densidade",
    "text": "2.2 gráfico densidade\n\nlibrary(ggridges)\ndft |&gt; \n  separate(data, into = c(\"ano\", \"mes\", \"dia\")) |&gt; \n  ggplot(aes(x = tmax, y = mes, fill = after_stat(x))) +\n  geom_density_ridges_gradient() +\n  scale_fill_viridis_c() +\n  labs(x = \"Temperatura média (ºC)\",\n       y = \"Meses do ano\",\n       fill = \"Temperatura\\nmédia (ºC)\")"
  },
  {
    "objectID": "04_modelo_crescimento.html#gráfico",
    "href": "04_modelo_crescimento.html#gráfico",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "\n2.3 Gráfico",
    "text": "2.3 Gráfico\n\nggplot() +\n  geom_bar(dftemp,\n           mapping = aes(x = data, y = prec * 30 / 100),\n           stat = \"identity\",\n           fill = \"skyblue\") +\n  geom_line(dftemp,\n            mapping = aes(x = data, y = tmax, colour = \"red\"),\n            linewidth = 1,\n            alpha = 0.1) +\n  geom_line(dftemp, \n            mapping = aes(x = data, y = tmin, colour = \"blue\"),\n            linewidth = 1,\n            alpha = 0.1) +\n  geom_smooth(dftemp,\n              mapping = aes(x = data, y = tmax, colour = \"red\"),\n              linewidth = 1,\n              se = FALSE) +\n  geom_smooth(dftemp, \n              mapping = aes(x = data, y = tmin, colour = \"blue\"),\n              linewidth = 1,\n              se = FALSE) +\n  scale_x_date(date_breaks = \"15 days\", date_labels =  \"%d/%m\",\n               expand = expansion(c(0, 0)))+\n  scale_y_continuous(name = expression(\"Temperatura (\"~degree~\"C)\"),\n                     sec.axis = sec_axis(~ . * 100 / 30 , name = \"Precipitação (mm)\")) +\n  theme(legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +\n  scale_color_identity(breaks = c(\"red\", \"blue\"),\n                       labels = c(\"Temperatura máxima (ºC)\",\n                                  \"Temperatura mínima (ºC)\"),\n                       guide = \"legend\") +\n  labs(x = \"Dia do ano\",\n       color = \"\") +\n  theme_bw(base_size = 16) +\n  theme(\n    panel.grid.major = element_blank(), #remove major gridlines\n    # panel.grid.minor = element_blank(), #remove minor gridlines\n    legend.background = element_rect(fill='transparent'), #transparent legend bg\n    legend.position = \"bottom\") #transparent legend panel\n\n\n\nggsave(\"figs/temperature.jpg\",\n       width = 12,\n       height = 8)"
  },
  {
    "objectID": "04_modelo_crescimento.html#qualidade-de-ajuste",
    "href": "04_modelo_crescimento.html#qualidade-de-ajuste",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "\n4.1 Qualidade de ajuste",
    "text": "4.1 Qualidade de ajuste\n\nlibrary(hydroGOF)\nget_r2 &lt;- function(model){\n  aic &lt;- AIC(model)\n  fit &lt;- model$m$fitted()\n  res &lt;- model$m$resid()\n  obs &lt;- fit + res\n  gof &lt;- gof(obs, fit, digits = 4)\n  r2 &lt;- gof[which(rownames(gof) == \"R2\")]\n  data.frame(aic = aic, r2 = r2)\n}\n\nqualidade &lt;- \n  mod_af |&gt; \n  mutate(map_dfr(.x = data,\n                 .f = ~get_r2(.))) |&gt; \n  select(-data)\n\n# export(qualidade, \"data/result_logistico.xlsx\", which = \"qualidade\")"
  },
  {
    "objectID": "04_modelo_crescimento.html#primeira-derivada",
    "href": "04_modelo_crescimento.html#primeira-derivada",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "\n5.1 Primeira derivada",
    "text": "5.1 Primeira derivada\n\n# primeira derivada\nD(expression(b1/(1 + exp(b2 - b3 * das))), \"das\")\n## b1 * (exp(b2 - b3 * das) * b3)/(1 + exp(b2 - b3 * das))^2\n\ndy &lt;- function(x,b1,b2,b3){\n  b1 * (exp(b2 - b3 * x) * b3)/(1 + exp(b2 - b3 * x))^2\n}\n\nparameters &lt;- \n  parameters |&gt; \n  mean_by(epoca, cultivar) |&gt; \n  mutate(xpi = b2 / b3,\n         ypi = dy(xpi, b1, b2, b3)) |&gt; \n  as.data.frame()\n\n# plot_pi &lt;-\nggplot() + \n  stat_function(fun = dy,\n                aes(color = \"D\", linetype = \"E1\"),\n                n = 500,\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[1, 3]],\n                         b2 = parameters[[1, 4]],\n                         b3 = parameters[[1, 5]])) +\n  stat_function(fun = dy,\n                aes(color = \"M\", linetype = \"E1\"),\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[2, 3]],\n                         b2 = parameters[[2, 4]],\n                         b3 = parameters[[2, 5]])) +\n  stat_function(fun = dy,\n                aes(color = \"D\", linetype = \"E2\"),\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[3, 3]],\n                         b2 = parameters[[3, 4]],\n                         b3 = parameters[[3, 5]])) +\n  stat_function(fun = dy,\n                aes(color = \"M\", linetype = \"E2\"),\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[4, 3]],\n                         b2 = parameters[[4, 4]],\n                         b3 = parameters[[4, 5]])) +\n  geom_point(aes(xpi, ypi, shape = epoca, color = cultivar),\n             data = parameters,\n             size = 3,\n             show.legend = FALSE) +\n  theme_bw(base_size = 16) +\n  scale_x_continuous(breaks = seq(0, 1200, by = 200)) +\n  labs(x = \"Graus dia acumulado\",\n       y = expression(Emissão~de~área~foliar~(cm^2~planta^{-1}~grau~dia^{-1})),\n       color  = \"Cultivar\",\n       linetype = \"Época\") +\n  scale_color_manual(values = c(\"gold\", \"brown\"))\n\n\n\n\nggsave(\"figs/prim_deriv.jpg\",\n       height = 7,\n       width = 9)"
  },
  {
    "objectID": "04_modelo_crescimento.html#segunda-derivada",
    "href": "04_modelo_crescimento.html#segunda-derivada",
    "title": "04: Modelagem da área foliar de cultivares de linho em diferentes épocas de semeadura utilizando o modelo Logístico",
    "section": "\n5.2 Segunda derivada",
    "text": "5.2 Segunda derivada\n\n# segunda derivada\nD(expression(b1 * (exp(b2 - b3 * x) * b3)/(1 + exp(b2 - b3 * x))^2), \"x\")\n## -(b1 * (exp(b2 - b3 * x) * b3 * b3)/(1 + exp(b2 - b3 * x))^2 - \n##     b1 * (exp(b2 - b3 * x) * b3) * (2 * (exp(b2 - b3 * x) * b3 * \n##         (1 + exp(b2 - b3 * x))))/((1 + exp(b2 - b3 * x))^2)^2)\n\nd2y &lt;- function(x,b1,b2,b3){\n  -(b1 * (exp(b2 - b3 * x) * b3 * b3)/(1 + exp(b2 - b3 * x))^2 - \n      b1 * (exp(b2 - b3 * x) * b3) * (2 * (exp(b2 - b3 * x) * b3 * \n                                             (1 + exp(b2 - b3 * x))))/((1 + exp(b2 - b3 * x))^2)^2)\n}\n\nparameters &lt;- \n  parameters |&gt; \n  mutate(xmap = (b2 - 1.3170)/b3,\n         xmdp = (b2 + 1.3170)/b3,\n         ymap = d2y(xmap, b1, b2, b3),\n         ymdp = d2y(xmdp, b1, b2, b3),\n  ) \n\n\n# df_acel &lt;-\nggplot() + \n  geom_hline(yintercept = 0) +\n  stat_function(fun = d2y,\n                aes(color = \"D\", linetype = \"E1\"),\n                n = 500,\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[1, 3]],\n                         b2 = parameters[[1, 4]],\n                         b3 = parameters[[1, 5]])) +\n  stat_function(fun = d2y,\n                aes(color = \"M\", linetype = \"E1\"),\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[2, 3]],\n                         b2 = parameters[[2, 4]],\n                         b3 = parameters[[2, 5]])) +\n  stat_function(fun = d2y,\n                aes(color = \"D\", linetype = \"E2\"),\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[3, 3]],\n                         b2 = parameters[[3, 4]],\n                         b3 = parameters[[3, 5]])) +\n  stat_function(fun = d2y,\n                aes(color = \"M\", linetype = \"E2\"),\n                linewidth = 1,\n                xlim = c(0, 1000),\n                args = c(b1 = parameters[[4, 3]],\n                         b2 = parameters[[4, 4]],\n                         b3 = parameters[[4, 5]])) +\n  geom_point(aes(xmap, ymap, fill = cultivar),\n             data = parameters,\n             size = 3,\n             shape = 24,\n             show.legend = FALSE) +\n  geom_point(aes(xmdp, ymdp, fill = cultivar),\n             data = parameters,\n             size = 3,\n             shape = 25,\n             show.legend = FALSE) +\n  theme_bw(base_size = 16) +\n  labs(x = \"Graus dia acumulado\",\n       y = expression(Aceleração~de~emissão~área~foliar~(cm^2~planta^{-1}~grau~dia^{-2})),\n       color  = \"Cultivar\",\n       linetype = \"Época\") +\n  scale_color_manual(values = c(\"gold\", \"brown\")) +\n  scale_fill_manual(values = c(\"gold\", \"brown\"))\n\n\n\n\nggsave(\"figs/seg_deriv.jpg\",\n       height = 7,\n       width = 9)\n\n# export(parameters, \"data/result_logistico.xlsx\", which = \"parametros_logistico\")"
  },
  {
    "objectID": "06_canonica.html",
    "href": "06_canonica.html",
    "title": "06: Correlação canônica entre caracteres morfológicos e componentes de rendimento em genótipos de linho (Linum usitatissimum, L.)",
    "section": "",
    "text": "library(rio)\nlibrary(tidyverse)\nlibrary(metan)\nlibrary(DT)\n# set_wd_here()"
  },
  {
    "objectID": "06_canonica.html#modelo",
    "href": "06_canonica.html#modelo",
    "title": "06: Correlação canônica entre caracteres morfológicos e componentes de rendimento em genótipos de linho (Linum usitatissimum, L.)",
    "section": "\n3.1 Modelo",
    "text": "3.1 Modelo\n\ncan &lt;- \n  df |&gt; \n  can_corr(FG = c(ap, ac, nc, nr),\n           SG = c(ngcap, areac, rgpla, mmg, icc),\n           by = epoca)\n## ---------------------------------------------------------------------------\n## Matrix (correlation/covariance) between variables of first group (FG)\n## ---------------------------------------------------------------------------\n##           ap          ac         nc         nr\n## ap 1.0000000  0.81117773 0.45121525  0.1331742\n## ac 0.8111777  1.00000000 0.08482991 -0.1869709\n## nc 0.4512153  0.08482991 1.00000000  0.7316597\n## nr 0.1331742 -0.18697085 0.73165968  1.0000000\n## ---------------------------------------------------------------------------\n## Collinearity within first group \n## ---------------------------------------------------------------------------\n## Weak multicollinearity in the matrix\n## cn = 19.629\n## Matrix determinant: 0.0777358 \n## Largest correlation: ap x ac = 0.811 \n## Smallest correlation: ac x nc = 0.085 \n## Number of VIFs &gt; 10: 0 \n## Number of correlations with r &gt;= |0.8|:  \n## Variables with largest weight in the last eigenvalues: \n## ap &gt; ac &gt; nc &gt; nr \n## ---------------------------------------------------------------------------\n## Matrix (correlation/covariance) between variables of second group (SG)\n## ---------------------------------------------------------------------------\n##            ngcap      areac       rgpla          mmg        icc\n## ngcap  1.0000000 0.26296383 0.402520262 -0.239166798 0.33507767\n## areac  0.2629638 1.00000000 0.159753707  0.123507658 0.05492074\n## rgpla  0.4025203 0.15975371 1.000000000  0.006144334 0.34416828\n## mmg   -0.2391668 0.12350766 0.006144334  1.000000000 0.49330432\n## icc    0.3350777 0.05492074 0.344168282  0.493304324 1.00000000\n## ---------------------------------------------------------------------------\n## Collinearity within second group \n## ---------------------------------------------------------------------------\n## Weak multicollinearity in the matrix\n## cn = 7.857\n## Matrix determinant: 0.3386914 \n## Largest correlation: mmg x icc = 0.493 \n## Smallest correlation: rgpla x mmg = 0.006 \n## Number of VIFs &gt; 10: 0 \n## Number of correlations with r &gt;= |0.8|:  \n## Variables with largest weight in the last eigenvalues: \n## icc &gt; mmg &gt; ngcap &gt; areac &gt; rgpla \n## ---------------------------------------------------------------------------\n## Matrix (correlation/covariance) between FG and SG\n## ---------------------------------------------------------------------------\n##          ngcap       areac      rgpla         mmg          icc\n## ap  0.14297684  0.23159477 0.45241636 -0.01659384  0.001810847\n## ac  0.02036806  0.17866011 0.06427307 -0.02774216 -0.069849946\n## nc  0.09216551 -0.03775157 0.88040005 -0.08016477  0.139528354\n## nr -0.10075528 -0.05986922 0.52852437 -0.02400980 -0.006935744\n## ---------------------------------------------------------------------------\n## Correlation of the canonical pairs and hypothesis testing \n## ---------------------------------------------------------------------------\n##             Var   Percent       Sum      Corr  Lambda     Chisq DF   p_val\n## U1V1 0.91331033 78.863560  78.86356 0.9556727 0.06682 132.58515 20 0.00000\n## U2V2 0.14173360 12.238574  91.10213 0.3764752 0.77074  12.75955 12 0.38676\n## U3V3 0.09133558  7.886749  98.98888 0.3022178 0.89802   5.27035  6 0.50964\n## U4V4 0.01170964  1.011117 100.00000 0.1082111 0.98829   0.57716  2 0.74933\n## ---------------------------------------------------------------------------\n## Canonical coefficients of the first group \n## ---------------------------------------------------------------------------\n##            U1         U2          U3         U4\n## ap  0.1381473  2.0729126 -0.06746449  0.9034184\n## ac -0.1934287 -1.2669561  0.77419368 -1.4211193\n## nc  1.0996397 -0.7724570 -0.95892238 -0.6902581\n## nr -0.2151237 -0.1566497  1.45572283  0.5446566\n## ---------------------------------------------------------------------------\n## Canonical coefficients of the second group \n## ---------------------------------------------------------------------------\n##                V1          V2         V3         V4\n## ngcap -0.28131632  0.77353683 -0.7403456  0.5148414\n## areac -0.11557210  0.51995122  0.4086707 -0.7392406\n## rgpla  1.09158775  0.07717883  0.2466620  0.1464232\n## mmg   -0.12516873  0.62215746  0.1271495  1.2106863\n## icc   -0.03682524 -0.65958924 -0.5774521 -0.7720312\n## ---------------------------------------------------------------------------\n## Canonical loads of the first group \n## ---------------------------------------------------------------------------\n##            U1          U2        U3           U4\n## ap 0.44876754  0.67577993 0.3217286 -0.488282620\n## ac 0.05213751  0.37830587 0.3659450 -0.848675816\n## nc 0.98816805 -0.05921725 0.1414051 -0.004672028\n## nr 0.64400157 -0.20888290 0.6003818  0.425642571\n## ---------------------------------------------------------------------------\n## Canonical loads of the second group \n## ---------------------------------------------------------------------------\n##                V1          V2          V3           V4\n## ngcap  0.14527547  0.57151821 -0.75749472 -0.168860224\n## areac -0.03264469  0.77630911  0.23738159 -0.473335815\n## rgpla  0.94644601  0.24842026 -0.18401484 -0.022708965\n## mmg   -0.08362021  0.17646708  0.07134546  0.616304809\n## icc    0.17650825 -0.03836275 -0.65546422  0.007512018\n## ---------------------------------------------------------------------------\n## Matrix (correlation/covariance) between variables of first group (FG)\n## ---------------------------------------------------------------------------\n##            ap         ac          nc          nr\n## ap 1.00000000  0.7844126  0.04763441  0.09243319\n## ac 0.78441262  1.0000000 -0.14838350 -0.13030800\n## nc 0.04763441 -0.1483835  1.00000000  0.42824058\n## nr 0.09243319 -0.1303080  0.42824058  1.00000000\n## ---------------------------------------------------------------------------\n## Collinearity within first group \n## ---------------------------------------------------------------------------\n## Weak multicollinearity in the matrix\n## cn = 9.999\n## Matrix determinant: 0.2681244 \n## Largest correlation: ap x ac = 0.784 \n## Smallest correlation: ap x nc = 0.048 \n## Number of VIFs &gt; 10: 0 \n## Number of correlations with r &gt;= |0.8|:  \n## Variables with largest weight in the last eigenvalues: \n## ac &gt; ap &gt; nr &gt; nc \n## ---------------------------------------------------------------------------\n## Matrix (correlation/covariance) between variables of second group (SG)\n## ---------------------------------------------------------------------------\n##             ngcap     areac      rgpla        mmg        icc\n## ngcap  1.00000000 0.3132724 0.04673693 -0.6209769 0.06576183\n## areac  0.31327243 1.0000000 0.33529058  0.1669935 0.11402430\n## rgpla  0.04673693 0.3352906 1.00000000  0.2874512 0.33602605\n## mmg   -0.62097694 0.1669935 0.28745120  1.0000000 0.41199351\n## icc    0.06576183 0.1140243 0.33602605  0.4119935 1.00000000\n## ---------------------------------------------------------------------------\n## Collinearity within second group \n## ---------------------------------------------------------------------------\n## Weak multicollinearity in the matrix\n## cn = 13.336\n## Matrix determinant: 0.2041884 \n## Largest correlation: ngcap x mmg = -0.621 \n## Smallest correlation: ngcap x rgpla = 0.047 \n## Number of VIFs &gt; 10: 0 \n## Number of correlations with r &gt;= |0.8|:  \n## Variables with largest weight in the last eigenvalues: \n## mmg &gt; ngcap &gt; icc &gt; areac &gt; rgpla \n## ---------------------------------------------------------------------------\n## Matrix (correlation/covariance) between FG and SG\n## ---------------------------------------------------------------------------\n##          ngcap      areac       rgpla         mmg         icc\n## ap -0.09666049 0.08786152  0.04465416  0.02753692 -0.21682681\n## ac -0.05026028 0.04086389 -0.15119903 -0.07567565 -0.24904923\n## nc -0.01846511 0.22783327  0.96609347  0.22305276  0.25109479\n## nr  0.13863943 0.17054753  0.38195178  0.01446315  0.08677514\n## ---------------------------------------------------------------------------\n## Correlation of the canonical pairs and hypothesis testing \n## ---------------------------------------------------------------------------\n##              Var    Percent       Sum       Corr  Lambda     Chisq DF   p_val\n## U1V1 0.959814309 88.1825949  88.18259 0.97970113 0.03518 200.82972 20 0.00000\n## U2V2 0.081604203  7.4973569  95.67995 0.28566449 0.87554   7.97507 12 0.78708\n## U3V3 0.037601360  3.4546114  99.13456 0.19391070 0.95333   2.86746  6 0.82529\n## U4V4 0.009419757  0.8654368 100.00000 0.09705543 0.99058   0.56786  2 0.75282\n## ---------------------------------------------------------------------------\n## Canonical coefficients of the first group \n## ---------------------------------------------------------------------------\n##             U1          U2         U3         U4\n## ap -0.04197306  0.90202300 -0.7403583  1.2642857\n## ac  0.03037444  0.11739651  0.9806385 -1.4293420\n## nc -1.01989205  0.03152231 -0.2178747 -0.4248021\n## nr  0.06574249 -0.18401639  1.0555516  0.3878919\n## ---------------------------------------------------------------------------\n## Canonical coefficients of the second group \n## ---------------------------------------------------------------------------\n##                V1          V2          V3         V4\n## ngcap  0.15309641 -0.45877904  0.61144180  1.4098002\n## areac  0.05261377  0.40984360  0.40675569 -0.3994575\n## rgpla -1.06244086  0.10703837  0.04880428 -0.1228564\n## mmg    0.14586655  0.05365294 -0.26510694  1.8031522\n## icc    0.02683996 -0.88983273 -0.23516294 -0.6576928\n## ---------------------------------------------------------------------------\n## Canonical loads of the first group \n## ---------------------------------------------------------------------------\n##             U1          U2         U3         U4\n## ap -0.06065213  0.97860262 0.11605663  0.1587107\n## ac  0.14021862  0.84425615 0.29467434 -0.4251321\n## nc -0.99824488 -0.02173335 0.05337823  0.0136232\n## nr -0.37885441 -0.10243810 0.76603007  0.5090911\n## ---------------------------------------------------------------------------\n## Canonical loads of the second group \n## ---------------------------------------------------------------------------\n##                V1          V2          V3         V4\n## ngcap  0.03110891 -0.41721796  0.89030866 0.11595222\n## areac -0.22823258  0.20950687  0.54358173 0.22712318\n## rgpla -0.98669626 -0.06057123  0.05853636 0.10641530\n## mmg   -0.23475864  0.07114837 -0.65972939 0.55471156\n## icc   -0.25400462 -0.81519841 -0.24139620 0.09107438"
  },
  {
    "objectID": "06_canonica.html#correlação-canônica",
    "href": "06_canonica.html#correlação-canônica",
    "title": "06: Correlação canônica entre caracteres morfológicos e componentes de rendimento em genótipos de linho (Linum usitatissimum, L.)",
    "section": "\n3.2 Correlação canônica",
    "text": "3.2 Correlação canônica\n\ncanc &lt;- gmd(can, \"canonical\") |&gt; round_cols(digits = 5)\n# export(canc, \"data/results_canonica.xlsx\", which = \"canonica\")\ndatatable(canc)"
  },
  {
    "objectID": "06_canonica.html#cargas-canônicas",
    "href": "06_canonica.html#cargas-canônicas",
    "title": "06: Correlação canônica entre caracteres morfológicos e componentes de rendimento em genótipos de linho (Linum usitatissimum, L.)",
    "section": "\n3.3 Cargas canônicas",
    "text": "3.3 Cargas canônicas\n\nloads &lt;- gmd(can, \"loads\") |&gt; round_cols(digits = 5)\n# export(loads, \"data/results_canonica.xlsx\", which = \"loads\")\ndatatable(loads)"
  },
  {
    "objectID": "06_canonica.html#primeiro-par",
    "href": "06_canonica.html#primeiro-par",
    "title": "06: Correlação canônica entre caracteres morfológicos e componentes de rendimento em genótipos de linho (Linum usitatissimum, L.)",
    "section": "\n4.1 Primeiro par",
    "text": "4.1 Primeiro par\n\n\n\n\nflowchart LR\nsubgraph Z[\"Caracteres de planta\"]\ndirection LR\nA[AP] --&gt; |-0.274|B[planta]\nC[AC] --&gt; |0.222|B\nD[NC] --&gt; |-0.994|B\nE[NR] --&gt; |-0.481|B\nend\n\nsubgraph ZA[\"Componentes do rendimento\"]\ndirection RL\nF[NGC] --&gt; |-0.249|G[rendimento]\nH[AC] --&gt;  |-0.445|G\nI[RGP] --&gt;  |-0.481|G\nJ[MMG] --&gt;  |-0.338|G\nK[ICP] --&gt;  |0.0175|G\nend\n\nZ &lt;--&gt; |0.968| ZA"
  },
  {
    "objectID": "06_canonica.html#segundo-par",
    "href": "06_canonica.html#segundo-par",
    "title": "06: Correlação canônica entre caracteres morfológicos e componentes de rendimento em genótipos de linho (Linum usitatissimum, L.)",
    "section": "\n4.2 segundo par",
    "text": "4.2 segundo par\n\n\n\n\nflowchart LR\n\nsubgraph Z[\"Caracteres de planta\"]\ndirection LR\nA([AP]) --&gt; |0.627|B{planta}\nC([AC]) --&gt; |-0.174|B\nD([NC]) --&gt; |0.034|B\nE([NR]) --&gt; |0.301|B\nend\n\nsubgraph ZA[\"Componentes do rendimento\"]\ndirection RL\nF([NGC]) --&gt; | 0.601|G{rendimento}\nH([AC]) --&gt;  |0.863|G\nI([RGP]) --&gt;  |0.189|G\nJ([MMG]) --&gt;  |0.491|G\nK([ICP]) --&gt;  |0.243|G\nend\n\nZ &lt;--&gt; |0.669| ZA"
  },
  {
    "objectID": "08_mgidi_fai.html",
    "href": "08_mgidi_fai.html",
    "title": "08: Índices FAI-BLUP e MGIDI na seleção de genótipos de linho",
    "section": "",
    "text": "% Analysis"
  },
  {
    "objectID": "08_mgidi_fai.html#sem-pesos",
    "href": "08_mgidi_fai.html#sem-pesos",
    "title": "08: Índices FAI-BLUP e MGIDI na seleção de genótipos de linho",
    "section": "\n3.1 Sem pesos",
    "text": "3.1 Sem pesos\n\nmod_mgidi &lt;-\n  df |&gt; \n  mgidi(ideotype = c(\"l, h, h, h, h, h, h,  h, h\"),\n        SI = 25)\n## \n## -------------------------------------------------------------------------------\n## Principal Component Analysis\n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 4\n##   PC    Eigenvalues `Variance (%)` `Cum. variance (%)`\n##   &lt;chr&gt;       &lt;dbl&gt;          &lt;dbl&gt;               &lt;dbl&gt;\n## 1 PC1          4.43          49.2                 49.2\n## 2 PC2          1.72          19.1                 68.3\n## 3 PC3          1.03          11.4                 79.8\n## 4 PC4          0.94          10.4                 90.2\n## 5 PC5          0.62           6.86                97.1\n## 6 PC6          0.23           2.56                99.6\n## 7 PC7          0.02           0.24                99.9\n## 8 PC8          0.01           0.11               100. \n## 9 PC9          0              0.02               100  \n## -------------------------------------------------------------------------------\n## Factor Analysis - factorial loadings after rotation-\n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 6\n##   VAR     FA1   FA2   FA3 Communality Uniquenesses\n##   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n## 1 cp     0.13 -0.13  0.78        0.65         0.35\n## 2 nc    -0.9   0.13 -0.32        0.93         0.07\n## 3 ng    -0.93 -0.12 -0.27        0.95         0.05\n## 4 areac -0.55 -0.18  0.31        0.44         0.56\n## 5 nr    -0.32 -0.18 -0.67        0.58         0.42\n## 6 mc    -0.95  0.11 -0.25        0.97         0.03\n## 7 rgpla -0.95  0.12 -0.23        0.97         0.03\n## 8 ngcap -0.18 -0.92  0.08        0.88         0.12\n## 9 mmg   -0.24  0.86  0.06        0.81         0.19\n## -------------------------------------------------------------------------------\n## Comunalit Mean: 0.7976177 \n## -------------------------------------------------------------------------------\n## Selection differential \n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 8\n##   VAR   Factor      Xo      Xs       SD SDperc sense     goal\n##   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n## 1 nc    FA1     33.5    57.6    24.0     71.8  increase   100\n## 2 ng    FA1    216.    394.    178.      82.3  increase   100\n## 3 areac FA1      0.394   0.423   0.0290   7.35 increase   100\n## 4 mc    FA1      1.64    3.07    1.43    87.7  increase   100\n## 5 rgpla FA1      1.22    2.34    1.12    92.3  increase   100\n## 6 ngcap FA2      6.47    6.90    0.431    6.67 increase   100\n## 7 mmg   FA2      5.60    6.11    0.511    9.14 increase   100\n## 8 cp    FA3     27.6    26.8    -0.775   -2.81 decrease   100\n## 9 nr    FA3      1.29    1.62    0.337   26.2  increase   100\n## ------------------------------------------------------------------------------\n## Selected genotypes\n## -------------------------------------------------------------------------------\n## G48 G228 G4 G13 G222 G9 G31 G10 G23 G14 G36 G17 G21 G3 G29 G215\n## -------------------------------------------------------------------------------"
  },
  {
    "objectID": "08_mgidi_fai.html#com-pesos",
    "href": "08_mgidi_fai.html#com-pesos",
    "title": "08: Índices FAI-BLUP e MGIDI na seleção de genótipos de linho",
    "section": "\n3.2 Com pesos",
    "text": "3.2 Com pesos\n\nmod_mgidi_peso &lt;-\n  df |&gt; \n  mgidi(ideotype = c(\"l, h, h, h, h, h, h,  h, h\"),\n        weights = c(2, 5, 5, 1, 1, 5, 5, 2, 2),\n        SI = 25)\n## \n## -------------------------------------------------------------------------------\n## Principal Component Analysis\n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 4\n##   PC    Eigenvalues `Variance (%)` `Cum. variance (%)`\n##   &lt;chr&gt;       &lt;dbl&gt;          &lt;dbl&gt;               &lt;dbl&gt;\n## 1 PC1          4.43          49.2                 49.2\n## 2 PC2          1.72          19.1                 68.3\n## 3 PC3          1.03          11.4                 79.8\n## 4 PC4          0.94          10.4                 90.2\n## 5 PC5          0.62           6.86                97.1\n## 6 PC6          0.23           2.56                99.6\n## 7 PC7          0.02           0.24                99.9\n## 8 PC8          0.01           0.11               100. \n## 9 PC9          0              0.02               100  \n## -------------------------------------------------------------------------------\n## Factor Analysis - factorial loadings after rotation-\n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 6\n##   VAR     FA1   FA2   FA3 Communality Uniquenesses\n##   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;\n## 1 cp     0.13 -0.13  0.78        0.65         0.35\n## 2 nc    -0.9   0.13 -0.32        0.93         0.07\n## 3 ng    -0.93 -0.12 -0.27        0.95         0.05\n## 4 areac -0.55 -0.18  0.31        0.44         0.56\n## 5 nr    -0.32 -0.18 -0.67        0.58         0.42\n## 6 mc    -0.95  0.11 -0.25        0.97         0.03\n## 7 rgpla -0.95  0.12 -0.23        0.97         0.03\n## 8 ngcap -0.18 -0.92  0.08        0.88         0.12\n## 9 mmg   -0.24  0.86  0.06        0.81         0.19\n## -------------------------------------------------------------------------------\n## Comunalit Mean: 0.7976177 \n## -------------------------------------------------------------------------------\n## Selection differential \n## -------------------------------------------------------------------------------\n## # A tibble: 9 × 8\n##   VAR   Factor      Xo      Xs       SD SDperc sense     goal\n##   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n## 1 nc    FA1     33.5    59.8    26.2    78.3   increase   100\n## 2 ng    FA1    216.    390.    174.     80.3   increase   100\n## 3 areac FA1      0.394   0.423   0.0286  7.24  increase   100\n## 4 mc    FA1      1.64    3.12    1.48   90.8   increase   100\n## 5 rgpla FA1      1.22    2.36    1.15   94.1   increase   100\n## 6 ngcap FA2      6.47    6.51    0.0449  0.694 increase   100\n## 7 mmg   FA2      5.60    6.50    0.906  16.2   increase   100\n## 8 cp    FA3     27.6    26.5    -1.09   -3.95  decrease   100\n## 9 nr    FA3      1.29    1.69    0.400  31.0   increase   100\n## ------------------------------------------------------------------------------\n## Selected genotypes\n## -------------------------------------------------------------------------------\n## G228 G4 G48 G13 G222 G31 G9 G36 G28 G29 G10 G21 G23 G41 G14 G17\n## -------------------------------------------------------------------------------"
  },
  {
    "objectID": "08_mgidi_fai.html#individuais",
    "href": "08_mgidi_fai.html#individuais",
    "title": "08: Índices FAI-BLUP e MGIDI na seleção de genótipos de linho",
    "section": "\n5.1 Individuais",
    "text": "5.1 Individuais\n\ngmgidisp &lt;- \n  gmd(mod_mgidi) |&gt; \n  select(VAR, sense, mgidi_sp = SDperc)\n\ngmgidicp &lt;- \n  gmd(mod_mgidi_peso) |&gt; \n  select(VAR,  mgidi_cp = SDperc)\n\ngfai &lt;- \n  gmd(mod_fai) |&gt; \n  select(VAR, fai = SDperc)\n\nbind &lt;- \n  reduce(list(gmgidisp, gmgidicp, gfai), left_join) |&gt; \n  pivot_longer(-c(VAR, sense))\n\n\nfacet_labels &lt;- c(\"FAI-BLUP\", \"MGIDI com peso\", \"MGIDI sem peso\")\nnames(facet_labels) &lt;- c(\"fai\", \"mgidi_cp\", \"mgidi_sp\")\n\nggplot(bind, aes(value, VAR)) +\n  geom_col(position = position_dodge(),\n           aes(fill = sense),\n           width = 1,\n           linewidth = 0.1,\n           color = \"black\") +\n  geom_text(aes(label = round(value, 2),\n                hjust = ifelse(value &gt; 0, -0.1, 1.1)),\n            size = 4) + \n  facet_wrap(~name,\n              labeller = labeller(name = facet_labels)) +\n  theme_bw(base_size = 18) +\n  theme(axis.text = element_text(size = 12, color = \"black\"),\n        axis.ticks.length = unit(0.2, \"cm\"),\n        panel.grid.minor = element_blank(),\n        legend.title = element_blank(),\n        legend.position = \"bottom\",\n        panel.spacing.x = unit(0, \"cm\")) +\n  geom_vline(xintercept = 0, linetype = 1, linewidth = 1) +\n  scale_x_continuous(expand = expansion(c(0.4, 0.4))) +\n  labs(y = \"Caracteres avaliados\",\n       x = \"Diferencial de seleção (%)\") +\n  geom_vline(xintercept = 0)\n\n\n\n\nggsave(\"figs/gains_mgidi_fai.jpg\",\n       width = 8,\n       height = 5)"
  },
  {
    "objectID": "08_mgidi_fai.html#totais",
    "href": "08_mgidi_fai.html#totais",
    "title": "08: Índices FAI-BLUP e MGIDI na seleção de genótipos de linho",
    "section": "\n5.2 Totais",
    "text": "5.2 Totais\n\ntot_fai &lt;- mod_fai[[\"total_gain\"]][[\"ID1\"]] |&gt; mutate(indice = \"FAI-BLUP\")\ntot_mgidi_cp &lt;- mod_mgidi_peso$stat_gain |&gt; mutate(indice = \"MGIDI com peso\")\ntot_mgidi_sp &lt;- mod_mgidi$stat_gain |&gt; mutate(indice = \"MGIDI sem peso\")\n\ntotais &lt;- \n  bind_rows(tot_fai, tot_mgidi_cp, tot_mgidi_sp) |&gt; \n  select(sense, max, sum, indice) |&gt;\n  pivot_longer(cols = max:sum)\n\nfacet_labels &lt;- c(\"Diferenciais máximos\", \"Soma dos diferenciais\")\nnames(facet_labels) &lt;- c(\"max\", \"sum\")\n\nggplot(totais, aes(indice, value)) +\n  geom_col(aes(fill = sense),\n           position = position_dodge()) +\n  facet_wrap(~name,\n             # scales = \"free\",\n             labeller = labeller(name = facet_labels)) +\n  theme_bw(base_size = 18) +\n  theme(axis.text = element_text(size = 12, color = \"black\"),\n        axis.text.x = element_text(angle = 30, vjust = 1, hjust = 1),\n        axis.ticks.length = unit(0.2, \"cm\"),\n        panel.grid.minor = element_blank(),\n        legend.title = element_blank(),\n        legend.position = \"bottom\",\n        panel.spacing.x = unit(0, \"cm\")) +\n  labs(x = \"Índices\",\n       y = \"Diferencial de seleção (%)\") +\n  geom_text(aes(label = round(value, 2),\n                vjust = ifelse(value &lt; 0, 1.2, -0.8)),\n            position = position_dodge2(width = 0.9)) +\n  scale_y_continuous(expand = expansion(0.1)) +\n  geom_hline(yintercept = 0,\n             linewidth = 0.9)\n\n\n\n\nggsave(\"figs/total_gains_mgidi_fai.jpg\",\n       width = 6,\n       height = 7)"
  },
  {
    "objectID": "10_pred_af.html",
    "href": "10_pred_af.html",
    "title": "10. Um método simples e indireto para estimação da área de folha de linho",
    "section": "",
    "text": "% Analysis\n\n1 Libraries\nTo reproduce the examples of this material, the R packages the following packages are needed.\n\nlibrary(pliman)\nlibrary(caret)\nlibrary(doParallel)\nlibrary(tidyverse)\nlibrary(DescTools)\nlibrary(ggExtra)\nlibrary(performance)\n\n\n2 Data\n\n\ndf_af &lt;- rio::import(\"data/leaf_flax_pred.xlsx\")\ndescritiva &lt;- \n  df_af |&gt; \n  summarise(across(area:width, .fns = list(media = mean, min = min, max = max)))\n\ndescritiva\n##   area_media   area_min area_max length_media length_min length_max width_media\n## 1  0.5909433 0.04281334 1.907076     2.142723   0.511989    4.37025   0.3322159\n##    width_min width_max\n## 1 0.09535828 0.5995659\n\np1 &lt;- \nggplot(df_af, aes(length, area)) + \n  geom_point( size = 3, alpha = 0.5, color = \"brown\") +\n  labs(x = \"Comprimento da folha (cm)\",\n       y = expression(Área~foliar~(cm^2~folha^{-1}))) +\n  theme_bw(base_size = 16)\nggMarginal(p1, color = \"brown\", size = 7, linewidth = 1)\n\n\np2 &lt;- \nggplot(df_af, aes(width, area)) + \n  geom_point( size = 3, alpha = 0.5, color = \"brown\") +\n  labs(x = \"Largura da folha (cm)\",\n       y = expression(Área~foliar~(cm^2~folha^{-1}))) +\n  theme_bw(base_size = 16)\nggMarginal(p2, color = \"brown\", size = 7, linewidth = 1)\n\n\n\n\n\n# functions\n# concordance correlation coefficient\nget_ccc &lt;- function(df, predicted, real){\n  if(is.grouped_df(df)){\n    df %&gt;% \n      group_modify(~get_ccc(.x, {{predicted}}, {{real}})) %&gt;% \n      ungroup()\n  } else{\n    predicted &lt;- pull(df, {{predicted}})\n    real &lt;- pull(df, {{real}})\n    cor &lt;- CCC(real, predicted, na.rm = TRUE)\n    data.frame(r = cor(real, predicted),\n               pc = cor$rho.c[[1]],\n               lwr_ci = cor$rho.c[[2]],\n               upr_ci = cor$rho.c[[3]],\n               bc = cor$C.b)\n  }\n}\n\n\n3 Model\n\n\ncontrol &lt;-\n  trainControl(method = 'cv',\n               p = 0.7,\n               number = 10,\n               verboseIter = TRUE,\n               savePredictions = \"all\")\n\nfit &lt;- train(area ~  length + length:width ,\n             method = \"lm\",\n             data = df_af,\n             trControl = control)\n## + Fold01: intercept=TRUE \n## - Fold01: intercept=TRUE \n## + Fold02: intercept=TRUE \n## - Fold02: intercept=TRUE \n## + Fold03: intercept=TRUE \n## - Fold03: intercept=TRUE \n## + Fold04: intercept=TRUE \n## - Fold04: intercept=TRUE \n## + Fold05: intercept=TRUE \n## - Fold05: intercept=TRUE \n## + Fold06: intercept=TRUE \n## - Fold06: intercept=TRUE \n## + Fold07: intercept=TRUE \n## - Fold07: intercept=TRUE \n## + Fold08: intercept=TRUE \n## - Fold08: intercept=TRUE \n## + Fold09: intercept=TRUE \n## - Fold09: intercept=TRUE \n## + Fold10: intercept=TRUE \n## - Fold10: intercept=TRUE \n## Aggregating results\n## Fitting final model on full training set\nprint(fit)\n## Linear Regression \n## \n## 3522 samples\n##    2 predictor\n## \n## No pre-processing\n## Resampling: Cross-Validated (10 fold) \n## Summary of sample sizes: 3169, 3170, 3170, 3169, 3170, 3170, ... \n## Resampling results:\n## \n##   RMSE        Rsquared   MAE       \n##   0.01419776  0.9982512  0.01148768\n## \n## Tuning parameter 'intercept' was held constant at a value of TRUE\nmod &lt;- fit$finalModel\ncheck_model(mod)\n\n\n\n\n\n4 Predictions\n\nlibrary(ggpubr)\n\ndf_af &lt;- \n  df_af |&gt; \n  mutate(pred = predict(fit$finalModel))\nget_ccc(df_af, area, pred)\n##           r        pc    lwr_ci    upr_ci        bc\n## 1 0.9991208 0.9991204 0.9990604 0.9991766 0.9999996\n\n\n# 1:1 concordance plot\nggplot(df_af, aes(area, pred)) +\n  geom_point(alpha = 0.2, color = \"brown\", size = 3) +\n  geom_abline(intercept = 0, slope = 1, color = \"red\", linewidth = 1) +\n  coord_equal() +\n  xlim(c(0, 2)) +\n  ylim(c(0, 2)) +\n  labs(y = expression(Área~foliar~observada~(cm^2~folha^{-1})),\n       x = expression(Área~foliar~predita~(cm^2~folha^{-1}))) +\n  theme_bw(base_size = 16)"
  }
]